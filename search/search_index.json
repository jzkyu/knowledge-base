{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This is a work-in-progress, I am currently using a template from this repo to publish my Obsidian Vault onto Github Pages. It is a free solution in the meantime (some things, like note previews, don't display properly); I may look for better looking alternatives in the future, but for now, there is now a place on the internet for my Knowledge Base. </p>"},{"location":"#about-me","title":"About me","text":"<ul> <li>cs major @ uc davis '25, minoring in math</li> <li>from socal, currently live in davis, ca</li> <li>interested in automation / autonomy, machine learning / data science, systems design, productivity</li> <li>hobbies: speedcubing, rhythm games, dance, gym, tech, etc.</li> </ul>"},{"location":"#maps-of-content","title":"Maps of Content","text":"<ul> <li>cheat sheets</li> </ul>"},{"location":"#note-taking-philosophy","title":"Note-Taking Philosophy","text":"<p>note-taking workflow</p>"},{"location":"Public/Fitness/Resistance%20Training/body%20power/","title":"Body power","text":"<p>Body power refers to the ability to produce the most amount of force in the shortest period of time. It is typically associated with explosive power. <sup>1</sup></p> <ol> <li> <p>https://www.healthline.com/health/exercise-fitness/what-are-reps#benefits\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Fitness/Resistance%20Training/body%20stability/","title":"Body stability","text":"<p>Body stability refers to the range of motion and stability around the joints ([[joint]]). </p>"},{"location":"Public/Fitness/Resistance%20Training/bodyweight%20exercise/","title":"Bodyweight exercise","text":"<p>Bodyweight exercise uses an individual's own weight to provide resistance against gravity. <sup>1</sup></p> <ol> <li> <p>https://en.wikipedia.org/wiki/Bodyweight_exercise\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Fitness/Resistance%20Training/cardiovascular%20endurance/","title":"Cardiovascular endurance","text":"<p>Cardiovascular endurance is the ability of your [[heart]] and lungs ([[lung]]) to fuel your [[body]] with oxygen. <sup>1</sup></p> <ol> <li> <p>https://www.healthline.com/health/exercise-fitness/endurance-vs-stamina#:~:text=Endurance%20refers%20to%20your%20body's,cardiovascular%20endurance%20and%20muscular%20endurance.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Fitness/Resistance%20Training/concentric%20movement/","title":"Concentric movement","text":"<p>Concentric movement involves the shortening of the [[muscle]].</p> <p>It's the part of the lift you're generally focused on i.e. getting the weight up. <sup>1</sup></p> <ol> <li> <p>https://www.menshealth.com/fitness/a41736822/eccentric-vs-concentric/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Fitness/Resistance%20Training/eccentric%20movement/","title":"Eccentric movement","text":"<p>Eccentric movement involves the lengthening of the [[muscle]].</p> <p>For example, lowering the barbell towards your [[chest]] on a bench press. <sup>1</sup></p> <p>It's good to control the weight down during the eccentric movement. </p> <ol> <li> <p>https://www.menshealth.com/fitness/a41736822/eccentric-vs-concentric/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Fitness/Resistance%20Training/endurance/","title":"Endurance","text":"<p>Endurance refers to the body's physical capability ot sustain an exercise for long periods of time. <sup>1</sup></p> <p>It's made up of two components: - cardiovascular endurance - muscular endurance</p> <ol> <li> <p>https://www.healthline.com/health/exercise-fitness/endurance-vs-stamina#:~:text=Endurance%20refers%20to%20your%20body's,cardiovascular%20endurance%20and%20muscular%20endurance.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Fitness/Resistance%20Training/exercise/","title":"Exercise","text":"<p>Exercise is intentional physical activity to enhance or maintain fitness and [[health]]. <sup>1</sup></p> <ol> <li> <p>https://en.wikipedia.org/wiki/Exercise/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Fitness/Resistance%20Training/fitness/","title":"Fitness","text":"<p>Fitness is a state of health and well-being; the ability to perform aspects of sports, occupations and daily activities. </p> <p>Fitness is achieved through proper [[nutrition]], exercise, and sufficient [[training rest]]. </p>"},{"location":"Public/Fitness/Resistance%20Training/hypertrophy/","title":"Hypertrophy","text":"<p>Hypertrophy is an increase in the physical size of muscles and growth of muscle cells ([[muscle]]). <sup>1</sup> </p> <ol> <li> <p>https://www.healthline.com/health/muscular-hypertrophy#definition\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Fitness/Resistance%20Training/isometric%20movement/","title":"Isometric movement","text":"<p>Isometric movement involves holding the contraction of the [[muscle]]. </p> <p>Examples of isometric movement include planks and squat holds. <sup>1</sup></p> <ol> <li> <p>https://www.menshealth.com/fitness/a41736822/eccentric-vs-concentric/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Fitness/Resistance%20Training/lift/","title":"Lift","text":"<p>A lift is where you exert force from your muscles ([[muscle]]) overcome the weight, such as a dumbbell or barbell. </p> <p>There are three phases: - concentric movement - eccentric movement - isometric movement</p>"},{"location":"Public/Fitness/Resistance%20Training/muscular%20endurance/","title":"Muscular endurance","text":"<p>Muscular endurance is the ability of your muscles ([[muscle]]) to work continuously without getting [[fatigue]]. <sup>1</sup></p> <ol> <li> <p>https://www.healthline.com/health/exercise-fitness/endurance-vs-stamina#:~:text=Endurance%20refers%20to%20your%20body's,cardiovascular%20endurance%20and%20muscular%20endurance.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Fitness/Resistance%20Training/resistance%20training/","title":"Resistance training","text":"<p>Resistance training is a form of exercise that uses external resistance to increase strength, endurance, and hypertrophy. <sup>1</sup></p> <p>This can include bodyweight exercise and weightlifting. </p> <p>Resistance training can help with: body power, body stability</p> <ol> <li> <p>https://www.healthline.com/health/exercise-fitness/hypertrophy-vs-strength#overview\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Fitness/Resistance%20Training/strength/","title":"Strength","text":"<p>Strength is the measure of a person's exertion of force on physical objects. <sup>1</sup></p> <p>It uses your [[nervous system]] to use as many muscle fibers ([[muscle]]) as needed to overcome an external force. <sup>2</sup></p> <ol> <li> <p>https://en.wikipedia.org/wiki/Physical_strength\u00a0\u21a9</p> </li> <li> <p>https://www.healthline.com/health/exercise-fitness/hypertrophy-vs-strength#hypertrophy-vs-strength\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Fitness/Resistance%20Training/tension/","title":"Tension","text":"<p>Tension refers to a [[muscle]] under strain.</p> <p>By putting the muscle in tension for longer periods of time, the muscle fibers will further break down, leading to more muscle growth. <sup>1</sup></p> <ol> <li> <p>https://www.mensjournal.com/health-fitness/gain-big-with-time-under-tension-training\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Fitness/Resistance%20Training/training%20repetition/","title":"Training repetition","text":"<p>A training repetition happens when: - You lift a weight up and bring it back down - You flow through a full body movement <sup>1</sup></p> <ol> <li> <p>https://www.healthline.com/health/exercise-fitness/what-are-reps#benefits\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Fitness/Resistance%20Training/training%20set/","title":"Training set","text":"<p>A training set is when you complete multiple training repetition of an exercise in a row. </p> <p>You plan a number of sets with a given number of reps, with [[training rest]] in between these sets.<sup>1</sup></p> <ol> <li> <p>https://www.healthline.com/health/exercise-fitness/what-are-reps#benefits\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Fitness/Resistance%20Training/training%20tempo/","title":"Training tempo","text":"<p>Training tempo refers to the time spent between the eccentric movement, concentric movement, and isometric movement in a lift.</p> <p>In other words, the time between lifting, lowering, and pausing. </p> <p>Maintaining a steady training tempo is important. A typical split would be 2 / 4 / 0. <sup>1</sup></p> <ol> <li> <p>https://www.mensjournal.com/health-fitness/gain-big-with-time-under-tension-training\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Fitness/Resistance%20Training/training%20variables/","title":"Training variables","text":"<p>Training variables are the most fundamental component of any training program. The variables determine the amount of stress you put on your body, which will eventually lead to the adaptations you want to achieve in your muscles. </p> <p>Training variables include: - training repetition - training set - [[training intensity]] - [[training volume]] - [[training rest]] - training tempo</p>"},{"location":"Public/Fitness/Resistance%20Training/weightlifting/","title":"Weightlifting","text":"<p>Weightlifting refers to exercises where people lift weights, typically in the form of dumbbells or barbells. <sup>1</sup></p> <ol> <li> <p>https://en.wikipedia.org/wiki/Weightlifting\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Index/Index/","title":"Index","text":""},{"location":"Public/Index/Index/#about-me","title":"About me","text":""},{"location":"Public/Index/Index/#current-interests","title":"Current interests","text":""},{"location":"Public/Index/Index/#maps-of-content","title":"Maps of Content","text":""},{"location":"Public/Index/Index/#note-taking-philosophy","title":"Note-Taking Philosophy","text":"<p>note-taking workflow</p>"},{"location":"Public/Index/note-taking%20workflow/","title":"Note taking workflow","text":"<p>Here I describe my workflow for taking notes on Obsidian, based on [[Zettelkasten]]. </p>"},{"location":"Public/Index/note-taking%20workflow/#purpose","title":"Purpose","text":"<p>I want to use my Obsidian Vault to contain the Knowledge Base to many of the fields, topics, and interests that are relevant to my work or life. </p>"},{"location":"Public/Index/note-taking%20workflow/#goals","title":"Goals","text":"<p>In doing so, these notes should strive to be:</p> <ul> <li>Clear<ul> <li>A person who has no prior knowledge of the content would be able to read the notes and be able to understand it and explain it themselves</li> <li>You should be able to look at the notes on a later day and still understand them</li> </ul> </li> <li>Atomic<ul> <li>With backlinks, we can abstract a lot of vocabulary (terms, topics, ideas) to be explained in their own separate pages</li> <li>Each page should focus on just one topic or concept</li> <li>Aim for each page to be no more than a screen full</li> </ul> </li> <li>Connected<ul> <li>Backlinks and tags allow us to connect topics and concepts across multiple disciplines</li> <li>More connections allow us to find the notes we need when we need them</li> </ul> </li> </ul>"},{"location":"Public/Index/note-taking%20workflow/#process","title":"Process","text":"<p>We absorb a lot of information in our day to day lives (in conversation, from reading, lectures, etc.). We need a process that helps us parse all this information and produce useful, high-quality notes from it. </p> <p>In [[Zettelkasten]], notes are categorized into fleeting notes and permanent notes.      - Fleeting notes can come from anywhere; generally, they would be notes from the day's lecture, chapter readings, Youtube videos, etc.     - Permanent notes are what this Obsidian Vault will contain; highly digestible content that takes the most useful information from fleeting notes and summarizes them in a succinct and clear way.</p> <p>Based on this, my process for taking notes is as follows:</p> <ol> <li>Capture<ul> <li>From sources of information, we will digest it, and start producing fleeting notes on other document systems. Generally, I would do typed notes on Google Docs on a Google Drive, or handwritten notes on my iPad Air with Collanote.</li> </ul> </li> <li>Convert<ul> <li>Examine the fleeting notes and find the core information / takeaways that will then be put onto permanent notes. In some fashion, they will be put in Obsidian as Markdown files. </li> </ul> </li> <li>Connect<ul> <li>As the Knowledge Base grows, we create connections between the different topics and concepts. That way, we can always find the information we need when we need them when understanding new concepts, effectively building up our Knowledge Base one on top of another. </li> </ul> </li> <li>Reiterate<ul> <li>As connections are made, look over previous pages and add any new / novel information that would improve the clarity and depth of the notes.</li> </ul> </li> </ol>"},{"location":"Public/Index/note-taking%20workflow/#references","title":"References","text":"<p>Zettlekasten Workflow - Zhenkai W. How to Take Smart Notes by Sonke Ahren Summary</p>"},{"location":"Public/Index/to-do/","title":"To do","text":"<ul> <li> Look into Obsidian Publish</li> <li> Look into Quartz</li> <li> Look into tools to help organize videos / articles / etc summaries</li> <li> Add tags for notes that are unfinished, need fixing, etc.</li> </ul>"},{"location":"Public/MOC/GMK67%20cheat%20sheet/","title":"GMK67 cheat sheet","text":"<p><code>fn</code> + <code>up_arrow / down_arrow</code>: Adjust brightness</p> <p><code>fn</code> + <code>[ / ]</code>: Adjust speed</p> <p><code>fn</code> + <code>\\</code>: Change mode</p>"},{"location":"Public/MOC/GitHub%20cheat%20sheet/","title":"GitHub cheat sheet","text":"<p>Open new repository: <code>repo.new</code></p> <p>Check lines / contributors: <code>/graphs/contributors</code></p>"},{"location":"Public/MOC/Google%20cheat%20sheet/","title":"Google cheat sheet","text":""},{"location":"Public/MOC/Google%20cheat%20sheet/#google-sheets","title":"Google Sheets","text":"<p>Tool finder: <code>opt</code> + <code>\\</code></p> <p>Move to beginning / end of row: <code>fn</code> + <code>left_arrow / right_arrow</code>     - Of sheet: <code>fn</code> + <code>opt</code> + `left_arrow / right_arrow</p> <p>Switch sheets: <code>opt</code> + <code>up_arrow / down_arrow</code></p>"},{"location":"Public/MOC/Google%20cheat%20sheet/#google-docs","title":"Google Docs","text":"<p>Page break: <code>cmd</code> + <code>enter</code></p>"},{"location":"Public/MOC/Homebrew%20cheat%20sheet/","title":"Homebrew cheat sheet","text":"<p><code>brew list &lt;package&gt;</code>: See an installed package</p> <p><code>brew install / uninstall</code>: To add / remove a package</p> <p><code>brew autoremove</code>: Remove unused dependencies</p> <p><code>brew list --versions</code>: List versions of all installed software</p> <p><code>brew search &lt;software_name&gt;</code>: Display available versions</p> <p><code>brew switch &lt;software_name&gt; &lt;version_number&gt;</code>: Switch to version number - Every change is tracked with git, so this basically checkouts older formula versions</p> <p>https://mac.install.guide/homebrew/7</p>"},{"location":"Public/MOC/Notion%20cheat%20sheet/","title":"Notion cheat sheet","text":"<p>Expand page to full screen: <code>cmd</code> + <code>o</code></p> <p>Hide left sidebar: <code>cmd</code> + <code>\\</code></p> <p>Search for page: <code>cmd</code> + <code>p</code></p>"},{"location":"Public/MOC/cheat%20sheets/","title":"Cheat sheets","text":"<p>The idea with these cheat sheets is not to write down everything, but things I end up having to look up. </p> <p>Tools: - yabai cheat sheet - vim cheat sheet - Arc cheat sheet - Obsidian cheat sheet - MacOS cheat sheet - VSCode cheat sheet - GitHub cheat sheet - Notion cheat sheet - Google cheat sheet - Homebrew cheat sheet - tmux cheat sheet - Windows cheat sheet</p> <p>Syntax: - LaTeX cheat sheet - git cheat sheet - stream cheat sheet - Bash cheat sheet - SSH cheat sheet - Markdown cheat sheet</p> <p>Other:  - circuit cheat sheet - GMK67 cheat sheet</p>"},{"location":"Public/MOC/tmux%20cheat%20sheet/","title":"Tmux cheat sheet","text":"<p><code>ctrl</code> + <code>w</code>: \"tmux mode\"</p>"},{"location":"Public/MOC/tmux%20cheat%20sheet/#in-tmux-mode","title":"In \"tmux mode\":","text":"<p><code>w</code>: Window previewer</p> <p><code>c</code>: Create window</p> <p><code>p / n</code>: Prev / next window</p> <p><code>&amp;</code>: Close window</p>"},{"location":"Public/MOC/tmux%20cheat%20sheet/#sessions","title":"Sessions:","text":"<p><code>tmux kill-session -a</code>: Kill all sessions but the current</p>"},{"location":"Public/Math/LaTeX%20cheat%20sheet/","title":"LaTeX cheat sheet","text":"<p><code>a_b</code>: \\(a_b\\)</p> <p><code>\\mathbf{R}</code>: \\(\\mathbf{R}\\)</p> <p><code>\\mathbb{R}</code>: \\(\\mathbb{R}\\)</p> <p><code>\\frac{a}{b}</code>: \\(\\frac{a}{b}\\)</p> <p><code>\\{x\\}</code>: \\(\\{x\\}\\)</p> <p><code>\\cdot</code>: \\(\\cdot\\)</p> <p><code>\\in</code>: \\(\\in\\)</p> <p><code>\\subset</code>: \\(\\subset\\)</p> <p><code>\\subseteq</code>: \\(\\subseteq\\)</p> <p><code>\\cap</code>: \\(\\cap\\)</p> <p><code>\\cup</code>: \\(\\cup\\)</p> <p><code>\\emptyset</code>: \\(\\emptyset\\)</p> <p><code>\\begin{enumerate}</code>: Creates a numerated list</p> <p></p> <p><code>\\exists</code>: \\(\\exists\\)</p> <p><code>\\forall</code>: \\(\\forall\\)</p> <p><code>\\therefore</code>: \\(\\therefore\\)</p> <p><code>\\x_{a}^{b}</code>: \\(x_{a}^{b}\\)</p> <p><code>\\text{Hello World}</code>: \\(\\text{Hello World}\\)</p> <p><code>\\implies</code>: \\(\\implies\\)</p> <p><code>\\land</code>: \\(\\land\\)</p> <p><code>\\lor</code>: \\(\\lor\\)</p> <p><code>\\neg</code>: \\(\\neg\\)</p> <p><code>\\caption[''short'']{''long''}</code>: Adds captions to a figure</p> <p><code>\\begin{figure}[h]</code>: Starts a figure </p> <p><code>\\circ</code>: \\(\\circ\\) <code>\\Sigma</code>: \\(\\Sigma\\)</p> <p><code>\\overline{ab}</code>: \\(\\overline{ab}\\)</p> <p><code>\\infty</code>: \\(\\infty\\)</p> <p><code>\\sqrt[x]{}</code>: \\(\\sqrt[x]{}\\)</p> <p><code>\\displaystyle</code>: Make math expressions large</p> <p><code>\\approx</code>: \\(\\approx\\)</p> <p><code>n \\choose x</code>: \\(n \\choose x\\)</p> <p>Inserting an image:</p> <pre><code>\\documentclass{article}\n\\usepackage{graphicx}\n\\graphicspath{ {./images/} }\n\n\\begin{document}\nThe universe is immense and it seems to be homogeneous, \nin a large scale, everywhere we look at.\n\n\\includegraphics{universe}\n\nThere's a picture of a galaxy above\n\\end{document}\n</code></pre> <p><code>/times</code>: \\(/times\\)</p> <p><code>/label{}</code> / <code>/ref{}</code>: To label, then reference that label's value</p>"},{"location":"Public/Math/MAT%20108%20Review/","title":"MAT 108 Review","text":"<p>Part 1</p> <p>Axiomatic Mathematics - Prove using axiom</p> <p>Mathematical Logic - Truth tables - English sentences and manipulation of those (unless, ...)) - , , </p> <p>Quantifiers: - For every:  - Exists: </p> <p>Proof techniques: - Proof by contradiction</p> <p> - Standard - Generalized - Strong / complete induction</p> <p>Well-ordering principle</p> <p>Part 2</p> <p>Zeckendorf's Theorem</p> <p>Sets -  -  -  - </p> <p>Relations</p> <p>'Prove for all numbers, p(x) is divisible by n'</p> <p>Part 3</p> <p>TA Ch. 3.1, 3.2, 3.3 - Partitions</p> <p>Ch. 4.1, 4.2, 4.3 - 1-1, onto, bijections</p> <p>Ch. 5.1, 5.2, 5.3 - Cardinality</p> <p>AoP Ch. 5.4</p> <p>Ch. 6.1, 6.2, 6.3 - Modular arithmetic</p> <p>relation - Identity, domain, range - Union, intersection - inverse, equivalence - Represent as directed graphs or tables - , ,  function - examples / constructions - 1-1 / onto / bijections - Functions as relations     - Composition / Inverse relation - Relation, codomain - Well-defined or not - Symmetry     - Nodes will point to itself     - Edges are bidirectional     - If I can find a connection, then everything else in it is connected - Equivalence relations are the same as relations</p>"},{"location":"Public/Math/base/","title":"Base","text":"<p>The number of unique digits, including zero, used to represent numbers. <sup>1</sup></p> <ol> <li> <p>https://en.wikipedia.org/wiki/Radix\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/bijection/","title":"Bijection","text":"<p>A function is a bijection when it is both onto and one to one.</p> <p>Translation: Each element \\(a \\in A\\) is matched with a unique element \\(f(a) \\in B\\), and every element of \\(B\\) is matched with something from \\(A\\). </p>"},{"location":"Public/Math/binary/","title":"Binary","text":"<p>Binary is a numeral system which only uses the digits \\(0\\) and \\(1\\). It is base 2.</p> <p>Circuits and logic in computing can be purely represented in binary. in general, it can be used to represent two things or states. </p>"},{"location":"Public/Math/boolean/","title":"Boolean","text":"<p>See: [[boolean algebra]]</p> <p>Boolean refers to variables which can only be one of two values: true or false. Boolean variables are usually denoted as a \\(1\\) or \\(0\\) as binary.</p>"},{"location":"Public/Math/decimal/","title":"Decimal","text":"<p>Decimal is a numeral system that is base 10; it uses the following set of symbols: $$ { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9} $$</p>"},{"location":"Public/Math/discrete/","title":"Discrete","text":"<p>Discrete refers to mathematical structures that are countable or otherwise distinct and separate. <sup>1</sup> </p> <p>In other words, discrete structures can only take certain values. For example, the number of students in class; you can't have half a student. <sup>2</sup></p> <p>Examples include integers, graphs, and statements in logic. <sup>3</sup></p> <ol> <li> <p>https://brilliant.org/wiki/discrete-mathematics/#:~:text=Discrete%20mathematics%20is%20the%20study,can%20be%20finite%20or%20infinite.\u00a0\u21a9</p> </li> <li> <p>https://www.mathsisfun.com/definitions/discrete-data.html\u00a0\u21a9</p> </li> <li> <p>https://en.wikipedia.org/wiki/Discrete_mathematics\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/equal/","title":"Equal","text":"<p>The symbol \\(=\\) means equal. To say \\(m=n\\) means that \\(m\\) and \\(n\\) are the same number. <sup>1</sup></p> <ol> <li> <p>https://matthbeck.github.io/papers/aop.noprint.pdf\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/function/","title":"Function","text":"<p>A function relates an input and an output. <sup>1</sup></p> <p>A function consists of: - a set \\(A\\) called the domain of the function - a set \\(B\\) called the codomain of the function - a rule \\(f\\) that assigns each \\(a\\in A\\) an element \\(f(a)\\in B\\)</p> <p>There are different ways to think of them: - as rules \\(f\\) that assigns elements of one set \\(X\\), elements of another set \\(Y\\) - as relations \\(R\\) from \\(X\\) to \\(Y\\) where for each \\(x \\in X\\) there is one and only one \\(y \\in Y\\) such that \\((x, y)\\) is in \\(R\\). </p> <pre><code>If $(x, y)$ is in $R$, we write $y = f(x)$.\n</code></pre> <ol> <li> <p>https://www.mathsisfun.com/sets/function.html\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/hexadecimal/","title":"Hexadecimal","text":"<p>Hexadecimal is a numeral system that is base 16; it uses the following set of symbols: $$ { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F } $$</p>"},{"location":"Public/Math/integer/","title":"Integer","text":"<p>An integer is a whole number, including 0 and negative whole numbers. The set of integers is denoted by \\(\\mathbb{Z}\\).</p>"},{"location":"Public/Math/maxterm/","title":"Maxterm","text":"<p>See: minterm</p> <p>A maxterm is a sum of all literal values in a function. </p> <p>If the literal is 1, it will be the complementary form of the variable (\\(\\neg A\\)) If the literal is \\(0\\), it will be the positive form of the literal (\\(A\\))</p> <p>For example, for the function \\(f\\) with inputs \\(A\\), \\(B\\), and \\(C\\): - Is a maxterm: \\(A+\\neg B+\\neg C\\) - Is not a maxterm: \\(A+B\\)</p> <p>To find the POS: - Select the rows that are false and and the corresponding maxterms</p>"},{"location":"Public/Math/minterm/","title":"Minterm","text":"<p>See: maxterm</p> <p>A minterm is a product of all literal values in a function. </p> <p>If the literal is \\(1\\), it will be the positive form of the literal (\\(A\\)) If the literal is \\(0\\), it will be the complementary form of the literal (\\(\\neg A\\))</p> <p>For example, for the function \\(f\\) with inputs \\(A\\), \\(B\\), and \\(C\\): - Is a maxterm: \\(\\neg ABC\\) - Is not a maxterm: \\(A\\neg B\\)</p> <p>To find the SOP: - Select the rows of output that are True and or the corresponding minterms</p>"},{"location":"Public/Math/natural/","title":"Natural","text":"<p>The natural numbers refers to the positive countable (discrete) numbers, sometimes including \\(0\\). The set of natural numbers is denoted by \\(\\mathbb{N}\\).</p>"},{"location":"Public/Math/numeral%20system/","title":"Numeral system","text":"<p>A numeral system is a writing system for expressing numbers. Given a set, a numerical system sets the rules for how it will be represented as numbers. <sup>1</sup></p> <p>Common numeral systems are: - binary      - The basis for all computing systems and operations; turning on and off circuits.  - octal - decimal     -  - hexadecimal     - Used in assembly / machine code, often to represent memory addresses</p> <ol> <li> <p>https://byjus.com/maths/number-system/#:~:text=What%20is%20Number%20System%20and,system%2C%20and%20hexadecimal%20number%20system.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/octal/","title":"Octal","text":"<p>Octal is a numeral system that is base 8; it uses the following set of symbols: $$ { 0, 1, 2, 3, 4, 5, 6, 7 } $$</p>"},{"location":"Public/Math/one%20to%20one/","title":"One to one","text":"<p>A function is one-to-one if </p> <p>$$ f(a) = f(b) \\implies a = b $$ Another way:</p> <p>$$ a \\not = a' \\implies f(a) \\not = f(a') $$ Translation: Distinct inputs give distinct outputs, no two arrays have the same head</p>"},{"location":"Public/Math/onto/","title":"Onto","text":"<p>A function is onto if for every \\(y\\), there is an \\(x\\) such that \\(f(x) = y\\).</p> <p>For each \\(b \\in B\\) there exists at least one \\(a \\in A\\) such that \\(f(a) = b\\).</p> <p>Translation: Every element of \\(B\\) is \"pointed to\"</p>"},{"location":"Public/Math/operand/","title":"Operand","text":"<p>An operand is an element that can be manipulated in an operation. </p>"},{"location":"Public/Math/operation/","title":"Operation","text":"<p>An operation refers to a process, usually in math. An operation calculates a value using an operand and operator. <sup>1</sup></p> <ol> <li> <p>https://www.splashlearn.com/math-vocabulary/addition/operation\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/operator/","title":"Operator","text":"<p>An operator is the symbol used to carry out an operation between operand. <sup>1</sup></p> <ol> <li> <p>https://math.stackexchange.com/questions/920699/operator-vs-operation-vs-function-vs-procedure-vs-algorithm#:~:text=One%20can%20even%20see%20books,S%2CS)%2D%3ES.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/product/","title":"Product","text":"<p>A product is the result of a multiplication expression.</p>"},{"location":"Public/Math/sequence/","title":"Sequence","text":"<p>A sequence is a knowledge-base/docs/Public/Math/function whose [[domain]] is the set of natural numbers. </p>"},{"location":"Public/Math/sum/","title":"Sum","text":"<p>A sum is the result of an addition expression.</p>"},{"location":"Public/Math/Analysis/analysis/","title":"Analysis","text":"<p>See: real analysis, [[complex analysis]], numerical analysis</p> <p>Analysis is like the formal, rigorous version of calculus. It takes the aspect taught in calculus classes and examines them more closely, seeking to generalize the rules of calculus and derive them from [[axioms]], or logically prove them. <sup>1</sup></p> <ol> <li> <p>https://www.reddit.com/r/explainlikeimfive/comments/g4b4wd/eli5_what_is_real_analysis/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/Analysis/numerical%20analysis/","title":"Numerical analysis","text":"<p>Numerical analysis is about step-by-step solutions (numerical method) to problems involving real numbers and [[complex numbers]]. <sup>1</sup> </p> <p>In other words, it is the rigorous study of approximately solving continuous math problems using a computer. </p> <p>\"Pretend you're reinventing the calculator. How can you efficiently calculate such-and-such function while guaranteeing the error is small?\" <sup>1</sup></p> <ol> <li> <p>https://www.reddit.com/r/math/comments/10aetmr/what_actually_is_numerical_analysis/\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"Public/Math/Analysis/numerical%20method/","title":"Numerical method","text":"<p>The aim is for an algorithm to give the solution (converge) if we were to carry it out in a limiting fashion. We can't do this in practice, so we repeat the algorithm until we get \"close enough\". This process is a numerical method. <sup>1</sup></p> <ol> <li> <p>https://www.reddit.com/r/math/comments/10aetmr/what_actually_is_numerical_analysis/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/Analysis/real%20analysis/","title":"Real analysis","text":"<p>Real analysis deals with analysis of the functions of the real numbers.</p> <p>Topics include continuous functions, differentiation, integral, [[limit]], sequence, and series. </p>"},{"location":"Public/Math/Axioms/additive%20inverse/","title":"Additive inverse","text":"<p>For each \\(m\\in \\mathbb{Z}\\), there exists an integer, denoted by \\(-m\\), such that $$ m+(-m)=0 $$</p>"},{"location":"Public/Math/Axioms/associativity%20of%20addition/","title":"Associativity of addition","text":"<p>If \\(m\\), \\(n\\), and \\(p\\) are integers, then: $$ (m+n)+p=m+(n+p) $$</p>"},{"location":"Public/Math/Axioms/associativity%20of%20multiplication/","title":"Associativity of multiplication","text":"<p>If \\(m\\), \\(n\\), and \\(p\\) are integers, then: $$ (m\\cdot n)\\cdot p=m\\cdot (n\\cdot p) $$</p>"},{"location":"Public/Math/Axioms/cancellation/","title":"Cancellation","text":"<p>Let \\(m\\), \\(n\\), and \\(p\\) be integers. If \\(m\\cdot n=m\\cdot p\\) and \\(m\\ne 0\\), then: $$ n=p $$</p>"},{"location":"Public/Math/Axioms/commutativity%20of%20addition/","title":"Commutativity of addition","text":"<p>If \\(m\\), \\(n\\), and \\(p\\) are integers, then: $$ m+n=n+m $$</p>"},{"location":"Public/Math/Axioms/commutativity%20of%20multiplication/","title":"Commutativity of multiplication","text":"<p>If \\(m\\), \\(n\\), and \\(p\\) are integers, then: $$ m\\cdot n=n\\cdot m $$</p>"},{"location":"Public/Math/Axioms/distributivity/","title":"Distributivity","text":"<p>If \\(m\\), \\(n\\), and \\(p\\) are integers, then: $$ m\\cdot(n+p)=m\\cdot n+m\\cdot p $$</p>"},{"location":"Public/Math/Axioms/identity%20element%20for%20addition/","title":"Identity element for addition","text":"<p>There exists an integer \\(0\\) such that whenever \\(m\\in \\mathbb{Z}\\), $$ m+0=m $$</p>"},{"location":"Public/Math/Axioms/identity%20element%20for%20multiplication/","title":"Identity element for multiplication","text":"<p>There exists an integer \\(1\\) such that \\(1\\ne0\\) and whenever \\(m\\in \\mathbb{Z}\\), $$ m\\cdot 1=m $$</p>"},{"location":"Public/Math/Axioms/reflexivity/","title":"Reflexivity","text":"<p>If \\(m\\) is an integer, then: $$ m=m $$</p>"},{"location":"Public/Math/Axioms/replacement/","title":"Replacement","text":"<p>If \\(m=n\\), then \\(n\\) can be substituted for \\(m\\) in any statement without changing the meaning of that statement. </p>"},{"location":"Public/Math/Axioms/symmetry/","title":"Symmetry","text":"<p>Let \\(m\\) and \\(n\\) be integers. If \\(m=n\\), then: $$ n=m $$</p>"},{"location":"Public/Math/Axioms/transivity/","title":"Transivity","text":"<p>Let \\(m\\), \\(n\\), and \\(p\\) be integers. If \\(m=n\\) and \\(n=p\\), then: $$ m=p $$</p>"},{"location":"Public/Math/Calculus/calculus/","title":"Calculus","text":"<p>Calculus is a branch of mathematics that studies change. </p> <p>It deals with continuous functions and using the properties of the derivative and integral. </p> <p>Calculus is a powerful tool that can be used to model real world phenomena. It can reveal new characteristics in systems and models with respect to time. </p>"},{"location":"Public/Math/Calculus/continuous/","title":"Continuous","text":"<p>In simple terms, a function or variable is continuous if its graph can be drawn in one stroke with a pencil. <sup>1</sup></p> <p>A function is discontinuous if there are breaks in the graph. If you have to lift your pencil, it means you made a very small movement but the function changed significantly. <sup>2</sup></p> <p>Continuous deals with real numbers and [[complex numbers]]. It is associated with measuring physical phenomena which continuously change, such as mechanical, electrical, and hydraulic. <sup>3</sup></p> <ol> <li> <p>https://www.zhenkaiweng.com/continuity/\u00a0\u21a9</p> </li> <li> <p>https://simple.wikipedia.org/wiki/Continuous_function#:~:text=A%20mathematical%20function%20is%20called,uninterrupted%20line%20(or%20curve).\u00a0\u21a9</p> </li> <li> <p>https://www.toppr.com/guides/physics/electronics/analog-computer-definition-and-types-of-analog-computers/#:~:text=An%20Analog%20computer%20is%20a,work%20on%20an%20analog%20signal.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/Graphs/cycle/","title":"Cycle","text":"<p>A cycle in a knowledge-base/docs/Public/Math/Graphs/graph is a non-empty trail where only the first and last vertices (vertex) are equal. <sup>1</sup></p> <ol> <li> <p>https://en.wikipedia.org/wiki/Cycle_(graph_theory)\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/Graphs/edge/","title":"Edge","text":"<p>An edge connects two vertices (vertex) together. </p> <p>Edges can be directed, pointing from one vertex to the next. <sup>1</sup> </p> <ol> <li> <p>https://mathinsight.org/definition/network_edge#:~:text=An%20edge%20(or%20link)%20of,in%20the%20first%20figure%20below.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/Graphs/eulerian%20cycle/","title":"Eulerian cycle","text":"<p>An eulerian cycle is a cycle visits each edge exactly once. </p>"},{"location":"Public/Math/Graphs/graph/","title":"Graph","text":"<p>A graph is made up of multiple vertex and [[edges]] which connect them together. </p> <p>A graph can be thought of as a network, a way to express the relationships between pairs of items. <sup>1</sup></p> <p>Formally, a graph consists of two finite sets, \\(V\\) and \\(E\\), representing vertices and edges. The elements of \\(E\\) are unordered pairs of vertices. </p> <p>For example: $$ V = {a, b, c, d, e, f} $$ $$ E = {(a, d), (a, e), (b, c)} $$</p> <ol> <li> <p>https://www.cs.cmu.edu/afs/cs/academic/class/15210-f14/www/lectures/graph-intro.pdf\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/Graphs/trail/","title":"Trail","text":"<p>A trail in a knowledge-base/docs/Public/Math/Graphs/graph is an open walk in which no edge is repeated. <sup>1</sup></p> <ol> <li> <p>https://www.geeksforgeeks.org/mathematics-walks-trails-paths-cycles-and-circuits-in-graph/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/Graphs/vertex/","title":"Vertex","text":"<p>A vertex is a point on a knowledge-base/docs/Public/Math/Graphs/graph. </p>"},{"location":"Public/Math/Graphs/walk/","title":"Walk","text":"<p>A walk in a knowledge-base/docs/Public/Math/Graphs/graph is a sequence of vertices (vertex) and edges (edge). <sup>1</sup> </p> <p>A walk is said to be open if the starting and ending vertices are different; closed if the starting and ending vertices are similar. </p> <ol> <li> <p>https://www.geeksforgeeks.org/mathematics-walks-trails-paths-cycles-and-circuits-in-graph/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/Logic/and/","title":"And","text":"<p>And is a logical conjunction. Its output is true when both inputs are true. </p> <p>\\(a\\) * \\(b\\)</p> <p>An AND of two or more literal is called a product. </p> B A Out 0 0 0 0 1 0 1 0 0 1 1 1 <p></p>"},{"location":"Public/Math/Logic/contrapositive/","title":"Contrapositive","text":"<p>A contrapositive states that \\(A\\implies B\\) has the same meaning as: $$ \\neg B\\implies\\neg A $$</p>"},{"location":"Public/Math/Logic/definition/","title":"Definition","text":"<p>A definition is a statement of the meaning of a term. Definition is represented as: $$ := $$ It can be read as: \"is defined as\". </p>"},{"location":"Public/Math/Logic/existential%20quantification/","title":"Existential quantification","text":"<p>Existential quantification states that there at is at least one value in the [[domain]] of \\(x\\) that will make the statement true. Existential quantification is represented as: $$ \\exists $$ It can be read as: \"there exists\". </p>"},{"location":"Public/Math/Logic/implication/","title":"Implication","text":"<p>An implication implies, that if A, then B.  $$ A\\implies B $$</p>"},{"location":"Public/Math/Logic/not/","title":"Not","text":"<p>Not is a logical inverter, which takes one input and converts \\(0\\) to \\(1\\) or \\(1\\) to  \\(0\\). </p> <p>\\(!n\\)</p> A Out 0 1 1 0 <p></p> <p></p>"},{"location":"Public/Math/Logic/or/","title":"Or","text":"<p>Or is a logical disjunction. Its output is true when either input is true. </p> <p>\\(a + b\\)</p> <p>An OR of two or more literal is called a sum. </p> <p>Truth table:</p> B A Out 0 0 0 0 1 1 1 0 1 1 1 1 <p>Logical circuit:</p> <p></p>"},{"location":"Public/Math/Logic/proposition/","title":"Proposition","text":"<p>A proposition is a statement or assertion, that is either true or false. <sup>1</sup></p> <ol> <li> <p>https://brilliant.org/wiki/propositional-logic/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/Logic/propositional%20logic/","title":"Propositional logic","text":"<p>Propositional logic is a branch of mathematics that studies the logical relationships of proposition. <sup>1</sup></p> <ol> <li> <p>https://brilliant.org/wiki/propositional-logic/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/Proofs/principle%20of%20mathematical%20induction/","title":"Principle of mathematical induction","text":"<p>Principle of mathematical induction, sometimes referred to as strong mathematical induction, is as follows:</p> <p>Let \\(S\\) be a subset of \\(\\mathbb{N}\\) with these two properties: 1. \\(1\\in S\\), and 2. for all \\(n\\in \\mathbb{N}\\), if \\(n\\in S\\), then \\(n+1\\in S\\) Then \\(S = \\mathbb{N}\\).</p> <p>In other words, to prove the statement: \\(p(n)\\) is true for all \\(n\\in \\mathbb{N}\\) - \\(p(1)\\) is true (base) - If \\(p(j)\\) is true for all integers \\(1\\le j \\le m\\), then \\(p(m+1)\\) is true</p>"},{"location":"Public/Math/Sets/cardinality/","title":"Cardinality","text":"<p>The cardinality of a set is the number of elements in the set. <sup>1</sup> </p> <ol> <li> <p>https://www.merriam-webster.com/dictionary/cardinality\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/Sets/cartesian%20product/","title":"Cartesian product","text":"<p>Let \\(A\\) and \\(B\\) be some set. The set of all ordered pairs \\((a, b)\\) such that \\(a\\in A\\) and \\(b \\in B\\) is called the cartesian product.  $$ A\\times B = {(a, b)| a\\in A, b\\in B} $$ Example: Let \\(A = \\{m, p\\}\\), \\(B = \\{5, 7, 9\\}\\). Then,  $$ A\\times B = {(m, 5), (m, 7), (m, 9), (p, 5), (p, 7), (p, 9)} $$</p>"},{"location":"Public/Math/Sets/composite%20relation/","title":"Composite relation","text":"<p>Given relations from set \\(A\\) to \\(B\\) and from \\(B\\) to \\(C\\), a composite relation is some relation from \\(A\\) to \\(C\\).</p> <p>Define relation \\(R\\) from \\(A\\) to \\(B\\), relation \\(S\\) from \\(B\\) to \\(C\\). The composite of \\(R\\) and \\(S\\) is: $$ S \\circ R = { (a, c) | (\\exists b \\in B) (a, b) \\in R \\land (b, c) \\in S } $$</p>"},{"location":"Public/Math/Sets/empty%20set/","title":"Empty set","text":"<p>The empty set is the set with no elements. There is no such \\(x\\in \\emptyset\\).</p>"},{"location":"Public/Math/Sets/equivalence%20class/","title":"Equivalence class","text":"<p>Given a set and an equivalence relation defined on that set, an equivalence class is a subset of that set containing all the elements that are equivalent to each other under the given relation. </p>"},{"location":"Public/Math/Sets/equivalence%20relation/","title":"Equivalence relation","text":""},{"location":"Public/Math/Sets/equivalence%20relation/#an-equivalence-relation-is","title":"An equivalence relation is:","text":""},{"location":"Public/Math/Sets/function%20equality/","title":"Function equality","text":"<p>Two functions \\(f\\) and \\(g\\) are equal as a relation / set if and only if they have both: - the same [[domain]], and - the values of \\(f\\) and \\(g\\) at each element of the domain are the same</p>"},{"location":"Public/Math/Sets/function/","title":"Function","text":"<p>A function consists of: - a set \\(A\\) called the domain of the function - a set \\(B\\) called the codomain of the function - a rule \\(f\\) that assigns each \\(a\\in A\\) an element \\(f(a)\\in B\\)</p> <p>A useful shorthand for this is \\(f: A\\to B\\)</p>"},{"location":"Public/Math/Sets/intersection/","title":"Intersection","text":"<p>The intersection of two sets contains only the elements contained in both set.</p> <p>The intersection of \\(A\\) and \\(B\\) is: $$ A \\cap B = { x | x\\in A \\land x\\in B} $$</p>"},{"location":"Public/Math/Sets/k-subset/","title":"K subset","text":"<p>A k-subset of a set \\(S\\) is a subset of \\(S\\) with cardinality \\(k\\).</p> <p>Example: The \\(3\\)-subset of \\(S = \\{1, 2, 3, 4\\}\\) are</p> \\[ \\{1, 2, 3\\}, \\{1, 2, 4\\}, \\{1, 3, 4\\}, \\{2, 3, 4\\} \\]"},{"location":"Public/Math/Sets/partition/","title":"Partition","text":"<p>A partition of a set \\(A\\) is a set \\(\\Pi\\) consisting of subsets of \\(A\\) such that: - whenever \\(P_1, P_2 \\in \\Pi\\) and \\(P_1 \\ne P_2\\) - then \\(P_1 \\cap P_2 = \\emptyset\\)</p> <p>Every \\(a \\in A\\) belongs to some \\(P \\in \\Pi\\).</p> <p>Partitioning the set is the same as having an equivalence relation on the set. </p>"},{"location":"Public/Math/Sets/power%20set/","title":"Power set","text":"<p>If \\(A\\) is a set, then the power set of \\(A\\) is the set whose elements are the subset of A, and it is denoted by \\(P(A)\\).  $$ P(A) = { B | B \\in A } $$</p>"},{"location":"Public/Math/Sets/rational/","title":"Rational","text":"<p>A rational is a number that can be expressed as the fraction of two integer, as in $$ \\frac{p}{q} $$</p>"},{"location":"Public/Math/Sets/real%20numbers/","title":"Real numbers","text":"<p>Real numbers contain the set of rational numbers and irrational numbers. </p>"},{"location":"Public/Math/Sets/relation/","title":"Relation","text":"<p>A relation \\(\\mathbb{R}\\) from \\(A\\) to \\(B\\) is a subset of \\(A\\times B\\). </p> <p>A relation \\(\\mathbb{R}\\) from \\(A\\) to \\(A\\) is also called a relation on \\(A\\). </p> <p>A knowledge-base/docs/Public/Math/Sets/function from \\(A\\) to \\(B\\) is a relation \\(f\\) from \\(A\\) to \\(B\\) such that: - the [[domain]] of \\(f\\) is \\(A\\) - if \\((x,y) \\in f\\) and \\((x, z) \\in f\\), then \\(y=z\\)</p> <p>We write \\(f: A \\implies B\\) and read: - \"f is a function from A to B\"</p>"},{"location":"Public/Math/Sets/set%20complement/","title":"Set complement","text":"<p>Given a set \\(A\\subseteq X\\) we define the set complement of \\(A\\) in \\(X\\) to be: $$ X - A $$ If the bigger set is clear from the context, we also write \\(A^c\\).</p> <p>For example: For the set \\(X= \\{1, 2, 3, 4, 5\\}\\) and set \\(A=\\{1, 2\\}\\), \\(A^c = \\{3, 4, 5\\}\\). </p>"},{"location":"Public/Math/Sets/set%20difference/","title":"Set difference","text":"<p>The set difference of \\(A\\) and \\(B\\) is: $$ A - B = { x | x\\in A \\land x\\not \\in B } $$</p>"},{"location":"Public/Math/Sets/set%20equality/","title":"Set equality","text":"<p>\\(A\\) and \\(B\\) have set equality, \\(A=B\\) if: $$ A\\subseteq B \\text{ and } B\\subseteq A $$</p>"},{"location":"Public/Math/Sets/set/","title":"Set","text":"<p>See: Set theory </p> <p>A set is a (unordered) collection of \"things\": elements, members, objects, etc. <sup>1</sup></p> <ol> <li> <p>https://matthbeck.github.io/papers/aop.noprint.pdf\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/Sets/subset/","title":"Subset","text":"<p>A subset is a set which all the elements are contained in another set.  Another way, \"Every element in \\(A\\) is in \\(B\\)\".</p> <p>\\(A\\) is a subset of \\(B\\) means: $$ \\text{If }x\\in A, \\text{ then } x\\in B $$ We write: $$ A\\subseteq B $$</p>"},{"location":"Public/Math/Sets/tuple/","title":"Tuple","text":"<p>A tuple is an ordered set with \\(n\\) elements. </p>"},{"location":"Public/Math/Sets/union/","title":"Union","text":"<p>The union of two sets contains all the elements contained in either set.</p> <p>The union of \\(A\\) and \\(B\\) is: $$ A \\cup B = { x | x\\in A \\lor x\\in B} $$</p>"},{"location":"Public/Math/Statistics/Poisson%20distribution/","title":"Poisson distribution","text":"<p>A Poisson distribution is a discrete [[probability]] [[distribution]] that represents the number of events occurring in a fixed </p>"},{"location":"Public/Math/Statistics/correlation/","title":"Correlation","text":"<p>See: covariance</p> <p>Correlation measures the linear relationship between two variables (variable) \\(X\\) and \\(Y\\) using the Pearson correlation coefficient, the most commonly used measure of correlation for continuous variables. </p> \\[ \\rho_{X,Y} = \\frac{cov(X,Y)}{\\sigma_{X}\\sigma_{Y}} $$ $$ \\sigma_X=\\sqrt{\\frac{\\sum_{i=1}^n\\left(X_i-\\bar{X}\\right)^2}{n}} $$ $$ \\sigma_Y=\\sqrt{\\frac{\\sum_{i=1}^n\\left(Y_i-\\bar{Y}\\right)^2}{n}} \\] <p>Correlation measures the direction and magnitude of the linear relationship (linear regression). </p>"},{"location":"Public/Math/Statistics/covariance/","title":"Covariance","text":"<p>See: correlation</p> <p>Covariance is a normalized ([[normalmeasure of how two variables ([[variable]]) \\(X\\) and \\(Y\\) change together linearly. </p> <p>Given a population of size \\(n\\), it is calculated as follows:</p> <p>$$ COV[X, Y] = E[(X - E[X])(Y - E[Y])] = \\frac{\\Sigma^n_{i=1} (X_i-\\overline{X})(Y_i-\\overline{Y})}{n} $$ The sign of the covariance indicates the direction of the relationship between variables: - when \\(COV[X, Y] &gt; 0\\), \\(X\\) and \\(Y\\) increase and decrease together. - when \\(COV[X, Y] &lt; 0\\), \\(X\\) tends to decrease while \\(Y\\) tends to increase and vice versa. - when \\(COV[X, Y] = 0\\), \\(X\\) and \\(Y\\) do not display any of the above two tendencies. No linear relationship between \\(X\\) and \\(Y\\). </p> <p>Note: *Covariance can only measure the directional relationship, not the magnitude. *</p>"},{"location":"Public/Math/Statistics/expected%20value/","title":"Expected value","text":"<p>The expected value, denoted as \\(E[X]\\) or sometimes \\(\\micro\\) of a random variable \\(X\\) is a [[measure of center]] of its [[probability]] [[distribution]]. </p> <p>For a discrete random variable, it's calculated by summing the product of each possible value of \\(X\\) with its probability of occurring.</p> \\[ E[X] = \\Sigma x*p(x) \\]"},{"location":"Public/Math/Statistics/exponential%20distribution/","title":"Exponential distribution","text":"<p>Exponential distribution measures the amount of time until some specific event happens. <sup>1</sup></p> <p>It is a process in which events happen continuously and independently at a constant average rate. </p> <ol> <li> <p>https://byjus.com/maths/exponential-distribution/#:~:text=In%20Probability%20theory%20and%20statistics,at%20a%20constant%20average%20rate.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Math/Statistics/geometric%20distribution/","title":"Geometric distribution","text":"<p>*Geometry distribution *</p>"},{"location":"Public/Math/Statistics/linear%20regression/","title":"Linear regression","text":"<p>Linear regression is a statistical method used for modeling the relationship between a dependent variable and one or more independent variables (independent variable). </p> <p>The linear relationship is represented by the equation of a line: \\(y=mx+b\\). </p> <p>The goal of linear regression is to find values of \\(m\\) and \\(b\\) that minimizes the difference between the predicted values and the actual values. </p> <p>The actual value (\\(y\\)) differs from the predicted value (\\(\\hat y\\)) by a random amount \\(\\epsilon\\): \\(y = \\hat y + \\epsilon\\)</p>"},{"location":"Public/Math/Statistics/random%20variable/","title":"Random variable","text":"<p>A random variable is a variable that can take on different values as a result of a random phenomenon. </p> <p>It represents a numerical outcome of a random experiment, process, or event. </p>"},{"location":"Public/Math/Statistics/variance/","title":"Variance","text":"<p>Variance is a measure of how much the values of a random variable deviated from its expected value. </p> \\[ Var[X] = E[(X - E[X])^2] \\]"},{"location":"Public/Math/Theory/De%20Morgan%27s%20law/","title":"De Morgan's law","text":"<p>In Set theory, De Morgan's law is as follows:</p> <p>Let \\(A, B \\subseteq X\\). Then, - \\((A \\cap B)^c = A^c \\cup B^c\\) - \\((A \\cup B)^c = A^c \\cap B^c\\)</p>"},{"location":"Public/Math/Theory/axiom/","title":"Axiom","text":"<p>An axiom is a statement that is assumed to be true. Axioms are facts. <sup>1</sup></p> <p>Axioms are the building blocks for the rest of mathematics. A list of axioms is simply a clearly stated starting point. <sup>1</sup></p> <ol> <li> <p>https://matthbeck.github.io/papers/aop.noprint.pdf\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"Public/Math/Theory/limit%20lemma/","title":"Limit lemma","text":"<p>See: theta notation, Big-O notation, omega notation</p> <p>Given \\(f(n)\\) and \\(g(n)\\), non-decreasing positive functions, then for \\(\\(\\lim_{x \\to \\infty} \\frac{f(x)}{g(x)}=L\\)\\) 1. If \\(L=0\\), then \\(f(n)=O(g(n))\\) 2. If \\(L=c\\), then \\(f(n)= \\theta(g(n))\\) for some constant \\(c\\) 3. If \\(L= \\infty\\), then \\(f(n)= \\Omega(g(n))\\)</p>"},{"location":"Public/Misc/quotes/","title":"Quotes","text":"<p>\"It is possible to commit no mistakes in life and still lose. That is not weakness. It is life\" - Picard</p> <p>\"You do some of the things, on some of the days\" - u/imoblong</p> <p>\"You put one word after another until its done. It's that easy, and that hard.\" - Neil Gaiman</p>"},{"location":"Public/Tech/Hardware/Computer/GPU/","title":"GPU","text":"<p>A GPU, or graphics processing unit, is a specialized processor with significantly more cores (core), making them very good at processing data in parallel. </p> <p>While originally designed for accelerating graphics rendering, they have found use in machine learning, video editting, and gaming applications. <sup>1</sup></p> <ol> <li> <p>https://www.intel.com/content/www/us/en/products/docs/processors/what-is-a-gpu.html\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer/SoC/","title":"SoC","text":"<p>A system on a chip, or SoC, is an integrated circuit that integrates most or all components of a computer or electronic system. <sup>1</sup> </p> <p>It is like a microcontroller, but with some more advanced components like a GPU, [[Wi-Fi]], and more coprocessors ([[coprocessor]]).  </p> <ol> <li> <p>https://en.wikipedia.org/wiki/System_on_a_chip\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer/buffer/","title":"Buffer","text":"<p>A buffer is a region of memory used to store data temporarily while it is being moved from one place to another. <sup>1</sup></p> <p>Buffers  A buffer can either be a fixed memory location in hardware, or virtualized in software that points at a location in hardware. </p> <ol> <li> <p>https://en.wikipedia.org/wiki/Data_buffer\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer/computer/","title":"Computer","text":"<p>A computer is a hardware device designed to process data according to programmed instructions. </p> <p>The key components are: - CPU - memory - motherboard - storage - PSU - Hardware cooling - Input devices: mouse, keyboard - Output devices: monitor,  - network devices</p>"},{"location":"Public/Tech/Hardware/Computer/core/","title":"Core","text":"<p>A core is a processor unit, that reads and executes ordinary CPU instructions (instruction).</p>"},{"location":"Public/Tech/Hardware/Computer/firmware/","title":"Firmware","text":"<p>Firmware is software that provides low-level control of hardware. Firmware is embedded directly onto specialized chips within the device itself - giving firmware the ability to manage essential functions like system booting. </p>"},{"location":"Public/Tech/Hardware/Computer/flash%20memory/","title":"Flash memory","text":"<p>Flash memory stores information in transistors (transistor) - they can be electronically modified. Some examples of flash memory include flash drives and SSDs. <sup>1</sup></p> <ol> <li> <p>https://en.wikipedia.org/wiki/Flash_memory\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer/integrated%20circuit/","title":"Integrated circuit","text":"<p>An integrated circuit, or IC, is a small electronic device (hardware) made up of multiple electronic components such as transistors (transistor), resistors, and capacitors. These components are etched onto semiconductor. <sup>1</sup></p> <ol> <li> <p>https://en.wikipedia.org/wiki/Integrated_circuit\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer/microcontroller/","title":"Microcontroller","text":"<p>A microcontroller is a small computer on a single integrated circuit. </p>"},{"location":"Public/Tech/Hardware/Computer/single-board%20computer/","title":"Single board computer","text":"<p>A single-board computer, or SBC, is a complete computer built on a single circuit board ([[printed circuit board]]), with a microprocessor (processor), memory, , and other features of a computer. </p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/CISC/","title":"CISC","text":"<p>CISC, which stands for Complex Instruction Set, describes a CPU architecture where there are different instructions that can accomplish all sorts of tasks.</p> <p>The thought process is that since hardware is so fast, we should provide instructions to do as much as we can in it so programmers can take advantage of them. </p> <p>Providing these complex instructions can increase the worse case path, which slows down all instructions. </p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/CPU/","title":"CPU","text":"<p>CPUs have a few different types of instruction formats to accommodate for all of the different operations while still maintaining some consistency. </p> <p>Major components of a CPU are: - Program Counter: Stores the address of the instruction we are working on - Register File: Small amount of memory inside the CPU. Stores values we are working on - [[ALU]]: Does the computations - Decoder: Reads instruction and sets the control signals inside of the CPU* to make it do what the instruction says</p> <p>Some types of CPU: - MIPS CPU</p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/D%20latch/","title":"D latch","text":"<p>A D latch is type of latch that has one input: Data (\\(D\\)). The output of the D latch is the same as the \\(D\\) input as long as the clock signal is high. <sup>1</sup></p> <ol> <li> <p>https://www.geeksforgeeks.org/latches-in-digital-logic/#\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/IO%20device/","title":"IO device","text":"<p>An IO Device has a controller that communicates between the device and the system interconnect. The controller provides an interface for accessing the device resources / functionality. </p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/MIPS%20CPU/","title":"MIPS CPU","text":"<p>A MIPS CPU has the following: - Implements an RISC based architecture - Has a fixed size instruction format     - 32 bits for a 32 bit CPU and 64 bits for a 64 bit CPU - Has 3 major instruction formats     - R-Type     - I-Type     - J-Type</p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/Mealy%20state%20machine/","title":"Mealy state machine","text":"<p>A Mealy state machine is a finite state machine whose current outputs are dependent on the current and previous state. <sup>1</sup></p> <p>In other words, the output is built on the edges. </p> <ol> <li> <p>https://www.geeksforgeeks.org/mealy-and-moore-machines-in-toc/#\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/Moore%20state%20machine/","title":"Moore state machine","text":"<p>A Moore state machine is a finite state machine whose current outputs are dependent only on the current state. <sup>1</sup></p> <p>In other words, the output will be 'inside' the state. </p> <ol> <li> <p>https://www.geeksforgeeks.org/mealy-and-moore-machines-in-toc/#\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/RISC/","title":"RISC","text":"<p>RISC, which stands for Reduced Instruction Set, describes a CPU architecture where only the most commonly used instructions are used. The thought here is that programmers won't take advantage of all the special instructions, so focus on making the instructions and CPU as fast as possible. (make the common case fast) </p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/SR%20latch/","title":"SR latch","text":"<p>A SR latch is a type of latch which has two inputs: set (\\(S\\)) and reset (\\(R\\)). The \\(S\\) input sets the output to \\(1\\), while the \\(R\\) input sets the output to \\(0\\). <sup>1</sup></p> <ol> <li> <p>https://www.geeksforgeeks.org/latches-in-digital-logic/#\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/adder/","title":"Adder","text":"<p>An adder is a logic circuit that adds binary numbers. It takes an input of two bits, and outputs two bits in sum and carry terms. </p> <p>A half adder produces the sum of the two inputs as a sum bit and carry out bit. </p> <p></p> A B Sum Carry Out 0 0 0 0 0 1 1 0 1 0 1 0 1 1 0 1 <p>A full adder also considers the carry input, the sum of three inputs as a sum bit and carry out bit. </p> <p></p> Carry In A B Sum Carry Out 0 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 1 1 0 1 1 0 0 1 0 1 0 1 0 1 1 1 0 0 1 1 1 1 1 1 <p>You can string multiple full adders together to create a ripple carry adder. The Carry Out bit of the previous adder stage will be the Carry In bit of the next adder stage. - However, this method is slow - you have to wait for the carry to propagate all the way through to the last stage</p> <p></p> <p>To reduce the delay on the carry, we can calculate the carries in parallel. Distributing the terms is known as a prefix adder. </p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/cache/","title":"Cache","text":"<p>A cache is a temporary data store that holds data so future requests for that data can be serve faster. </p> <p>It is a smaller, faster memory component inserted between the main memory and the CPU that stores values recently accessed in memory.</p> <p>Requests to memory are intercepted to the cache: 1. If the cache has it, it serves it immediately 2. If the cache doesn't have it, it will make a request to memory and store the result for later</p> <p>The cache can be extended beyond the original use: - Main memory serves as a cache to the hard drive - Registers serve as a cache for the cache</p> <p>Cache is used for the internet a lot.</p> <p>Terminology: - Word: An element in memory     - The unit of transfer between the cache and the CPU - Block. A contiguous chunk (next to each other) of words in memory     - Unit of transfer between memory and the cache - Way: A Block inside of a set along with the additional overhead bits related to a block to make the cache work - Set: a collection of Ways - Cache: a collection of Sets</p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/circuit%20cheat%20sheet/","title":"Circuit cheat sheet","text":""},{"location":"Public/Tech/Hardware/Computer%20Architecture/clock%20edge/","title":"Clock edge","text":"<p>A clock edge acts as a sampling signal that triggers the update of a state element. </p> <p>There is a rising edge and a falling edge. </p> <p>One edge is called the active edge - the edge (rising or falling) on which changes occur. <sup>1</sup></p> <p></p> <ol> <li> <p>https://cs.nyu.edu/~gottlieb/courses/2000s/2000-01-fall/arch/lectures/lecture-04.html\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/clock%20skew/","title":"Clock skew","text":"<p>A clock skew describes how a clock does not arrive to all flip flop at the same time, as components can be far apart and clocks can be gated. </p> <p>A clock skew limits the amount of useful work we can do. </p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/clock/","title":"Clock","text":"<p>The system clock is used as an input to the [[sequential circuit]], alternating between \\(1\\) and \\(0\\) at regular intervals (in a clock cycle), to control when the state of a circuit changes. <sup>1</sup></p> <ol> <li> <p>https://courses.cs.vt.edu/<sub>cs1104/SystemsOrg/COrgn_9.htm#:</sub>:text=All%20the%20circuits%20in%20the,state%20of%20a%20circuit%20changes.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/comparator/","title":"Comparator","text":"<p>A comparator takes in two binary inputs, and checks to see if the bits of each input are the same value at each position. </p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/demultiplexer/","title":"Demultiplexer","text":"<p>A demultiplexer takes in one input and directs it to one of \\(2^n\\) outputs based on the select bits.</p> <p>It functions like a railroad switching station. </p> <p></p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/device/","title":"Device","text":"<p>A device is a unit of physical hardware or equipment that provides some computing function within a system. <sup>1</sup></p> <ol> <li> <p>https://www.techopedia.com/definition/2185/device\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/digital/","title":"Digital","text":"<p>Digital refers to electronic technology that use discrete values, generally zero and one, to generate, store, and process data. <sup>1</sup></p> <ol> <li> <p>https://www.techopedia.com/definition/604/digital-definition\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/finite%20state%20machine/","title":"Finite state machine","text":"<p>A finite state machine is a model that describes systems with a finite number of states and transitions to represent their behavior and logic. <sup>1</sup></p> <p>There are different kinds of finite state machines: - Moore state machine - Mealy state machine</p> <ol> <li> <p>https://www.spiceworks.com/tech/tech-general/articles/what-is-fsm/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/flip%20flop/","title":"Flip flop","text":"<p>A flip flop is a latch that is controlled by a clock. </p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/gate/","title":"Gate","text":"<p>A gate is the building block of a computer, performing basic logical functions. <sup>1</sup></p> <p>They have multiple inputs, and produce one output. </p> <ol> <li> <p>https://www.techtarget.com/whatis/definition/logic-gate-AND-OR-XOR-NOT-NAND-NOR-and-XNOR#:~:text=A%20logic%20gate%20is%20a,of%20logic%20gates%20in%20them.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/hardware/","title":"Hardware","text":"<p>Hardware is the physical components of a computer. </p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/instruction/","title":"Instruction","text":"<p>An instruction is the basic elementary operations that a CPU can perform. <sup>1</sup></p> <p>There are different kinds of instructions: - R-Type Instructions     - Register Instructions     - rd = rs funct rt         - rd = destination         - rs = source         - rt = target         - funct = the bits of the instruction to perform - I-Type Instructions     - Immediate Instruction     - rt = rs op Sign Extended Immediate     - SEI means prepending the most significant bit of the immediate to the immediate until it is 32 bits big - J-Type Instructions     - Jump Instructions     - PC = (PC+4)_{31:28}:addr:00, where ':' means concatenate     - PC = program counter; the address of the instruction that we are currently working on right now</p> <ol> <li> <p>https://www.geeksforgeeks.org/computer-organization-basic-computer-instructions/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/interconnect/","title":"Interconnect","text":"<p>An interconnect transfers data between components. </p> <p>An interconnect is characterized by various features, speed, bandwidth, etc. </p> <p>There are buses between the processor and the cache. - Cache bus (back side bus) - CPU bus (front side bus)</p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/k-maps/","title":"K maps","text":"<p>A k-map, or Karnaugh Map, is a way to simplify boolean expressions when you have more than two variables. <sup>1</sup></p> <ol> <li> <p>https://study.com/academy/lesson/what-is-a-karnaugh-map-definition-examples.html\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/latch/","title":"Latch","text":"<p>A latch is a digital circuit that stores a single bit of information and holds its value until it is update by new input signals. <sup>1</sup></p> <p>There are several types of latches, including: - SR latch - D latch - </p> <ol> <li> <p>https://www.geeksforgeeks.org/latches-in-digital-logic/#\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/literal/","title":"Literal","text":"<p>A literal is a notation for representing a fixed value in code. <sup>1</sup></p> <ol> <li> <p>https://thabo-ambrose.medium.com/what-is-a-literal-in-computer-programming-560eace90b5b\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/memory/","title":"Memory","text":"<p>Memory is the set of addressable bytes that can hold numerical values. </p> <p>There are different layers of memory: - CPU registers: Access time is immediate - CPU cache: A few cycles to access - RAM / Main memory: A few hundred cycles to access - Second level storage: A few thousands cycles to access</p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/multiplexer/","title":"Multiplexer","text":"<p>A multiplexer selects one of its data ports to forward to the output based on the selection signal.</p> <p>It behaves like a switch statement in programming. </p> <p></p> <p>In general, a multiplexer has \\(2^n\\) data inputs and requires \\(n\\) select bits to choose which one will be the output. Larger multiplexers can be constructed with gate and tree of other multiplexers. </p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/one%20hot%20decoder/","title":"One hot decoder","text":"<p>A one hot decoder has \\(n\\) inputs and \\(2^n\\) outputs, where each combination of inputs corresponds to an output of 1. </p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/one%20hot%20encoder/","title":"One hot encoder","text":"<p>A one hot encoder has one flip flop per state, and exactly one of these flip flops will be \\(1\\) at a time. </p> <p>Another way to think of it, is that you have a binary [[vector]] of length \\(n\\), where the vector is all zeroes except for the index that corresponds to the category, which is set to \\(1\\).</p> <p>For the three categories, \"Red\", \"Green\", and \"Blue\": - \"Red\": [1, 0, 0] - \"Green\": [0, 1, 0] - \"Blue\": [0, 0, 1]</p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/register/","title":"Register","text":"<p>A register is memory built into the processor so data can be quickly stored, accessed, and manipulated. <sup>1</sup></p> <ol> <li> <p>https://www.totalphase.com/blog/2023/05/what-is-register-in-cpu-how-does-it-work/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/semiconductor/","title":"Semiconductor","text":"<p>A semiconductor is a material that conducts [[electricity]] under certain conditions and blocks it in other conditions. <sup>1</sup></p> <ol> <li> <p>https://news.stanford.edu/stories/2023/09/stanford-explainer-semiconductors\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/short%20circuit/","title":"Short circuit","text":"<p>A short circuit happens when both power and ground are connected. </p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/transistor/","title":"Transistor","text":"<p>A transistor is an electrical switch in circuits. There are no moving parts. </p> <p>MOS = Metal Oxide semiconductor There are two types of transistors: nMOS and pMOS - nMOS     - Connects the source and drain when \\(1\\) is applied     - Good at passing \\(0\\)'s but bad at passing \\(1\\)'s; pulls down (to ground) transistors - pMOS     - Connects the source and drain when \\(0\\) is applied     - Good at passing \\(1\\)'s but bad at passing \\(0\\)'s'; pulls up (to Vdd) transistors - Use both together when building gates so we can use them on their good modes: CMOS</p> <p> </p> <p>How they work:  Current flows when there is an electrical difference i.e. positive to negative. When a positive voltage is applied to the gate, it attracts electrons from the substrate, making the top part of the substrate behave like it is negatively charged. Now that there is an electrical difference, the source and drain are connected, and current flows. </p> <p></p>"},{"location":"Public/Tech/Hardware/Computer%20Architecture/xor/","title":"Xor","text":"<p>An xor is a logical exclusive disjunction, where the operation is true if and only if its inputs are different from each other.</p> <p>\\(a\\) ^ \\(b\\)</p> B A Out 0 0 0 0 1 1 1 0 1 1 1 0 <p></p>"},{"location":"Public/Tech/Hardware/Devices/DSLR/","title":"DSLR","text":"<p>DSLR, or digital single-lens reflex, is a digital camera that utilizes a variety of lenses with a solid-state image sensor. <sup>1</sup></p> <ol> <li> <p>https://en.wikipedia.org/wiki/Digital_single-lens_reflex_camera\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Hardware/Devices/camera/","title":"Camera","text":"<p>A camera is a device that captures light and converts it into images / videos - a lens is used to focus light onto a light-sensitive surface, such as film or an electronic sensor. </p> <p>Some key components of a camera are: - Lens: Focuses light on the sensor - Shutter: Controls how much light reaches the sensor - Aperture: Controls how much light the lens lets in</p>"},{"location":"Public/Tech/Networks/FTP/","title":"FTP","text":"<p>FTP, or File Transfer Protocol, is a protocol that allows computers to communicate and exchanges files over a network, specifically IP/TCP connections. </p>"},{"location":"Public/Tech/Networks/IP%20address/","title":"IP address","text":"<p>An IP address (Internet Protocol address) is an address primarily used to identify a device connected on a network using the Internet Protocol. It provides a general geographical location. </p>"},{"location":"Public/Tech/Networks/MAC%20address/","title":"MAC address","text":"<p>A MAC address (Media Access Control address) is an address primarily used as a unique identifier assigned to a piece of hardware. </p> <p>It is a 12-digit hexadecimal number assigned to each device connected to the network. </p>"},{"location":"Public/Tech/Networks/OSI%20model/","title":"OSI model","text":"<p>Open System Interconnection, or OSI, is a model of abstraction layers in a communication system. </p> <p>There are five abstraction layers, from highest to lowest level: 1. Application Layer: High-level protocol for resource sharing (HTTP) 2. Transport Layer: Transmission of data segments between points on a network (segmentation, acknowledgements, multiplexing) 3. Network Layer: Management of a multi-node network (addressing, routing (router), traffic control) 4. Link Layer: Transmission of data frames ([[data frame]]) between two nodes (node) 5. Physical Layer: Transmission of raw bit streams over a physical medium</p>"},{"location":"Public/Tech/Networks/SSH%20cheat%20sheet/","title":"SSH cheat sheet","text":"<p>Log into UC Davis CSIF computers: <pre><code>ssh jimarina@pc05.cs.ucdavis.edu\n</code></pre></p> <p>Referencing files on the host: <pre><code>host:[/path]\n</code></pre> Transferring files from local to CSIF: <pre><code>scp ~/&lt;path&gt; jimarina@pc05.cs.udavis.edu:~/&lt;path&gt;\n</code></pre></p> <p>Transfer files from CSIF to local: <pre><code>scp jimarina@pc05.cs.ucdavis.edu:~/&lt;path&gt; ~/&lt;path&gt;\n</code></pre></p>"},{"location":"Public/Tech/Networks/SSH/","title":"SSH","text":"<p>SSH (Secure SHell) is a network protocol that enables two computers to communicate and share data securely over insecure networks through encrypted connections. <sup>1</sup></p> <p>SSH is often used to \"login\" and perform operations on remote computers, but can also be used for transferring data. <sup>1</sup></p> <p>Basic commands: <pre><code>ssh &lt;user&gt;@pc&lt;#&gt;.cs.ucdavis.edu\n</code></pre></p> <p>You can run a command on remote machines and pipe (command) the result: <pre><code>ssh noah@pc17.cs.ucdavis.edu ls | grep Downloads\n</code></pre></p> <ol> <li> <p>https://www.ucl.ac.uk/isd/what-ssh-and-how-do-i-use-it\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Networks/TCP/","title":"TCP","text":"<p>TCP, or Transmission Control Protocol, is a protocol that allows computers to exchange messages (message) over a network. </p>"},{"location":"Public/Tech/Networks/access%20link/","title":"Access link","text":"<p>An access link is a connection that allows a computer (hardware) to access a network.</p> <p>Examples of access links are:  - Wifi - Ethernet - Bluetooth - Cellular - USB - NFC - Fiber</p> <p>Each mode of access links have varying advantages and disadvantages in speed, cost, and accessibility. </p>"},{"location":"Public/Tech/Networks/address/","title":"Address","text":"<p>An address is a way to identify where some hardware or software is located. </p>"},{"location":"Public/Tech/Networks/client/","title":"Client","text":"<p>A client is hardware or software that requests services from a server.</p> <p>Examples include: - Phones - Tablets - Laptops - Smart TVs - AR/VR</p>"},{"location":"Public/Tech/Networks/cloud/","title":"Cloud","text":"<p>Cloud is a term to organize a set of servers (server) and their services. </p>"},{"location":"Public/Tech/Networks/data%20center/","title":"Data center","text":"<p>A data center is a physical location that stores hardware and related equipment - containing servers (server), hard drives, and digital data. </p>"},{"location":"Public/Tech/Networks/internet/","title":"Internet","text":"<p>The structure of the internet consists of the edge and core:</p> <p>The edge of the internet consists of clients (client).</p> <p>The core of the internet consists of routers (router). </p> <p>Connections between clients and the router, and between routers are access links. </p>"},{"location":"Public/Tech/Networks/message/","title":"Message","text":"<p>A message in networks (network) is a unit of data that is exchanged between devices, applications, or processes (process) over a network. Messages are typically structured data packets ([[data packet]]) that carry the information needed for communication. <sup>1</sup> </p> <ol> <li> <p>https://en.wikipedia.org/wiki/Message_passing\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Networks/network/","title":"Network","text":"<p>A network is a set of computers (hardware) sharing resources (like printers) and exchanging data with each other. <sup>1</sup></p> <ol> <li> <p>https://fcit.usf.edu/network/chap1/chap1.htm\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Networks/pipe/","title":"Pipe","text":"<p>A pipe is a buffer for transferring data between one process and another process - used in IPC. </p>"},{"location":"Public/Tech/Networks/port/","title":"Port","text":"<p>A port is a logical connection that's used by software to exchange information - specifying the specific program or service to be used on a computer. <sup>1</sup></p> <p>Ports are standardized (HTTP runs on 80, FTP runs on 21, etc.)</p> <ol> <li> <p>https://www.youtube.com/watch?v=g2fT-g9PX9o\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Networks/proxy/","title":"Proxy","text":"<p>Proxy is a router that acts as a gateway between a user and the internet - it anonymously passes data between a client's request and a server's response. <sup>1</sup></p> <ol> <li> <p>https://www.digitalguardian.com/blog/what-proxy-server-definition-how-it-works-more\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Networks/router/","title":"Router","text":"<p>A router is a device that connects multiple networks (network) together and allows them to communicate with each other. </p> <p>Routers forward data packets ([[data packet]]) to other routers, towards their intended IP address. </p>"},{"location":"Public/Tech/Networks/server/","title":"Server","text":"<p>A server is a dedicated computer that provides services to clients. Services could be loading a website, accessing data, or fetching emails - which can all be on the same machine. </p>"},{"location":"Public/Tech/Networks/socket/","title":"Socket","text":"<p>A socket is a pipe that allows programs to send and receive data over a network or locally - it's a port of an IP address. </p>"},{"location":"Public/Tech/Software/AI/bias/","title":"Bias","text":"<p>Bias is the error between average model prediction (i.e. \\(E[g(x)]\\)) and the ground truth \\(f(x)\\). </p> <p>Bias indicates the training error. </p> \\[ Bias^2 = E[(E[g(x)]-f(x))^2] \\]"},{"location":"Public/Tech/Software/AI/coefficient%20of%20determination/","title":"Coefficient of determination","text":"<p>The coefficient of determination, or \\(R^2\\), measures the strength of the relationship between independent variable (inputs and the dependent variable (outputs).</p> <p>It indicates the goodness of the fit of a linear regression. $$ 0.0 \\le R^2 \\le 1.0 $$ Note: \\(R^2\\) can increase as more predictors are added to a model, which can give an illusion of improvement. </p>"},{"location":"Public/Tech/Software/AI/computer%20vision/","title":"Computer vision","text":"<p>Computer vision is a field in computer science focused on a computer's ability to analyze and understand images and videos. <sup>1</sup></p> <p>There are key tasks associated with computer vision: -  -  -  - </p> <ol> <li> <p>https://kili-technology.com/data-labeling/computer-vision/image-annotation/image-recognition-with-machine-learning-how-and-why\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/AI/confusion%20matrix/","title":"Confusion matrix","text":"<p>A confusion matrix is a table often used to evaluate the performance of a [[classification]] algorithm in machine learning. </p>"},{"location":"Public/Tech/Software/AI/cost%20function/","title":"Cost function","text":"<p>A cost function \\(L\\) is used to measure the error of the prediction with the actual value in machine learning. Minimizing the cost function gives the best fit. </p> <p>A common loss function is the residual sum of squares:</p> <p>$$ L = \\Sigma^{n}_{i = 1} (y_i - \\hat y_i)^2 $$ </p>"},{"location":"Public/Tech/Software/AI/cross%20validation/","title":"Cross validation","text":"<p>Cross validation is used to compare models and prevent overfitting. </p> <p>It is a resampling procedure to help he model to generalize well </p>"},{"location":"Public/Tech/Software/AI/curve%20fitting/","title":"Curve fitting","text":"<p>Curve fitting refers to the process of determining a function that best approximates the relationship between some independent variable and some dependent variable. </p> <p>We want to minimize the overall error. </p> <p>Under-fitting is when a model fails to capture the complex underlying patterns in the data - Bias-Variance Trade off: if a model has high bias and low variance, the model under-fits the data</p>"},{"location":"Public/Tech/Software/AI/data%20preprocessing/","title":"Data preprocessing","text":"<p>With data processing, we want to clean up the dataset to improve the accuracy (cost function) of a model (machine learning). </p> <p>Possible areas of improvement: - Reduce dimensions by dropping irrelevant data - Fill in missing values - Encode the labels - Remove outliers</p>"},{"location":"Public/Tech/Software/AI/dataset/","title":"Dataset","text":"<p>A dataset (set of data) is important for building machine learning models. </p> <ul> <li>Completeness: contains all relevant features or observations necessary for a given task</li> <li>Size: large enough set for patterns to be relevant</li> <li>Validity: contains accurate labels</li> </ul>"},{"location":"Public/Tech/Software/AI/dependent%20variable/","title":"Dependent variable","text":"<p>A dependent variable is a variable which depends on changes in the independent variable. <sup>1</sup>In other words, it is the effect of the change. </p> <ol> <li> <p>https://www.scribbr.com/methodology/independent-and-dependent-variables/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/AI/dimensional%20data/","title":"Dimensional data","text":"<p>Dimensional data refers to to a dataset composed of individual, non-overlapping data elements.</p> <p>The purpose of having dimensional data is for filtering, grouping, and labeling. </p> <p>We want to reduce high-dimensional data into something smaller to reduce the complexity of computations. </p>"},{"location":"Public/Tech/Software/AI/error/","title":"Error","text":"<p>In machine learning, the error of a model is:</p> <p>$$ Bias^2 + Variance + Ireeducible Error $$ where \\(Bias^2\\) is</p> <p></p> <p>and \\(Variance\\) is</p> <p></p>"},{"location":"Public/Tech/Software/AI/feature%20engineering/","title":"Feature engineering","text":"<p>Feature engineering transforms [[raw data]] into a more effective, useful set of inputs that a model i.e. machine learning can use. </p>"},{"location":"Public/Tech/Software/AI/image%20classification/","title":"Image classification","text":"<p>Image classification labels images (image) and categorizes them. </p>"},{"location":"Public/Tech/Software/AI/image/","title":"Image","text":"<p>An image is comprised of an array of pixel values. </p>"},{"location":"Public/Tech/Software/AI/independent%20variable/","title":"Independent variable","text":"<p>An independent variable is a variable that stands alone and isn't changed by the other variables you're trying to measure. <sup>1</sup> In other words, it causes change. </p> <ol> <li> <p>https://nces.ed.gov/nceskids/help/user_guide/graph/variables.asp\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/AI/k-fold%20cross%20validation/","title":"K fold cross validation","text":"<p>K-fold cross validation is a technique to assess the performance of a machine learning model; specifically, comparing models and to prevent overfitting. It involves partitioning a dataset into \\(k\\) equal-sized folds or subsets (subset). </p> <p>The model is trained and evaluated \\(k\\) times, using a different fold for evaluation each time while the remaining \\(k-1\\) folds are used for training. Each fold contains approximately the same proportion of data points, preserving how these points are spread. </p> <p>The performance metric is averaged across all iterations into a single estimate - how well the model generalizes to unseen data. </p>"},{"location":"Public/Tech/Software/AI/machine%20learning/","title":"Machine learning","text":"<p>Machine learning is a subfield of artificial intelligence that involves building models for computers to help make intelligence decisions.</p> <p>Usually when programming, you define the rules. But it isn't always known what those rules are, as some problems can be very complex. </p> <p>Machine learning will identify those rules and patterns; learning a function that maps desired inputs and outputs. </p>"},{"location":"Public/Tech/Software/AI/mean%20squared%20error/","title":"Mean squared error","text":"<p>The mean squared error, or \\(MSE\\), is a way to measure the fit of the model on training data. </p> <p>It can also be used to measure the fit of the model on the test data. </p> <p>Note: \\(MSE\\) doesn't inherently increase with more predictors, making it a more \"honest\" metric when tweaking model complexity. </p>"},{"location":"Public/Tech/Software/AI/model%20training/","title":"Model training","text":"<p>To train a model, </p>"},{"location":"Public/Tech/Software/AI/object%20detection/","title":"Object detection","text":"<p>Object detection is determining the presence of objects with the help of bounding boxes and categorizing it within the class it belongs to. </p>"},{"location":"Public/Tech/Software/AI/object%20localization/","title":"Object localization","text":"<p>Object localization is identifying the location of an object in an image, by surrounding it with a bounding box. </p>"},{"location":"Public/Tech/Software/AI/object%20segmentation/","title":"Object segmentation","text":"<p>Object segmentation is distinguishing the various elements within an image. Segmentation doesn't use bounding boxes but highlights the contours of the object in the image. </p>"},{"location":"Public/Tech/Software/AI/time%20series/","title":"Time series","text":"<p>Time series is a machine learning technique that forecasts target values based solely on a known history of target values. <sup>1</sup></p> <ol> <li> <p>https://docs.oracle.com/en/database/oracle/machine-learning/oml4sql/21/dmcon/time-series.html#GUID-0D6954B9-9D66-42E2-A62F-F3FFE84B827E\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/AI/variable/","title":"Variable","text":"<p>A variable is any characteristic that can take on multiple values, such as height, age, temperature, and score. <sup>1</sup></p> <ol> <li> <p>https://www.scribbr.com/methodology/independent-and-dependent-variables/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Engineering/API/","title":"API","text":"<p>API stands for Application Programming Interface, which is a way for computer programs to communicate with each other. </p> <p>They follow a documented protocol in how to structure the request and responses. <sup>1</sup></p> <p>REST API, also known as Representational State Transfer, defines a set of functions to access server data using HTTP verbs. <sup>2</sup> <sup>3</sup> - POST: Create a new resource into the collection of resources on the server - GET: Retrieve resources from the server - PUT: Update the existing resource on the server - the full resource - PATCH: Update the existing resource on the server - portion of resource - DELETE: Delete the resources from the server</p> <ol> <li> <p>https://aws.amazon.com/what-is/api/\u00a0\u21a9</p> </li> <li> <p>https://www.restapitutorial.com/lessons/httpmethods.html\u00a0\u21a9</p> </li> <li> <p>https://dev.to/qbentil/http-methods-get-post-put-patch-delete-1fhi\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Engineering/CRUD/","title":"CRUD","text":"<p>CRUD is the acronym for Create, Read, Update, and Delete. They describe the four essential operations for creating and managing data in a database. <sup>1</sup></p> <ol> <li> <p>https://www.crowdstrike.com/cybersecurity-101/observability/crud/#:~:text=CRUD%20is%20the%20acronym%20for,in%20relational%20and%20NoSQL%20databases.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Engineering/LTS/","title":"LTS","text":"<p>LTS stands for Long Time Support, generally to refer to software that is recommended for most users when developing. </p>"},{"location":"Public/Tech/Software/Engineering/MVP/","title":"MVP","text":"<p>MVP stands for Minimum Viable Product, a development approach where a product is built with the minimum features necessary to be functional and get feedback on. <sup>1</sup></p> <ol> <li> <p>https://www.linkedin.com/pulse/what-mvp-software-development-powercodecouk/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Engineering/backend/","title":"Backend","text":"<p>Back-end refers to the software that processes data between the frontend and database. <sup>1</sup>Back-end is generally run on the client server. </p> <p>The back-end will take a valid request from the frontend, and request needed data from the database through API calls. The back-end will process and serve this data as something the front-end can understand and use. </p> <ol> <li> <p>https://www.linkedin.com/pulse/front-end-back-end-database-side-structure-app-aleksandra-czajka/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Engineering/bug/","title":"Bug","text":"<p>See: debugging</p> <p>A bug is a fault in software that causes the program to behave differently from its intended behavior. </p> <p>While a program may compile and run, it still contains bugs when it produces behavior that is not as intended. </p> <p>Typically, locating a bug is much harder than solving it. </p>"},{"location":"Public/Tech/Software/Engineering/component/","title":"Component","text":"<p>A component is a reusable, self-contained building block that encapsulates a piece of user interface (GUI) and its behavior. </p> <p>Components are the core building blocks of [[React]] applications. </p> <p>Components make it easier to manage and maintain complex applications. </p>"},{"location":"Public/Tech/Software/Engineering/container/","title":"Container","text":"<p>A container is a package that includes everything needed to run a piece of software, such as the application, runtime, tools, libraries, and settings. Containers are used to ensure software runs consistently across different environments (runtime environment). </p> <p>Containers are isolated, portable, and lightweight. It is important to note containers will share the same operating system, including the kernel.</p> <p>A container engine takes a container image, unpacks it, and is executed on the container runtime. </p>"},{"location":"Public/Tech/Software/Engineering/controller/","title":"Controller","text":"<p>Controllers are modules that handle the application logic for specific routes. They receive incoming request, process the data if necessary, interact with the database or other services, and send an appropriate response back to the client. </p>"},{"location":"Public/Tech/Software/Engineering/coverage/","title":"Coverage","text":"<p>Coverage refers to how much of a program has been run by software testing. It provides a good approximation for how well the program is running. </p>"},{"location":"Public/Tech/Software/Engineering/database/","title":"Database","text":"<p>A database stores all the data necessary for an application's needs. <sup>1</sup></p> <p>A database will take a valid request from the backend to perform a CRUD action on the data. </p> <ol> <li> <p>https://www.linkedin.com/pulse/front-end-back-end-database-side-structure-app-aleksandra-czajka/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Engineering/debugging/","title":"Debugging","text":"<p>See: bug</p> <p>Debugging is the processes of fixing problems in the code.</p> <p>Programmers spend a lot of time debugging, almost 50% of the time. </p> <p>There isn't really an established method for teaching debugging and problem solving. Experience can't really be taught. </p> <p>The MINS problem solving model works like this: - Make a mental model     - What is the intended behavior of the system     - Flowcharts are a great way to plan a program or function - Identify inconsistencies     - What is the actual behavior of the program?  - Narrow the problem scope     - Interpret inconsistencies to figure out the bug's location - Solve     - After locating the bug, generate a solution and test it</p> <ul> <li>For production, probably better to disable the debug support and activate all possible optimization support<ul> <li>Reduce size, increase performance</li> </ul> </li> </ul>"},{"location":"Public/Tech/Software/Engineering/dependency/","title":"Dependency","text":"<p>See: abstraction</p> <p>A dependency is a software component that relies on another software component to function correctly. </p> <p>Dependencies allow developers to reuse existing code, modularize their applications, and manage complexity. </p>"},{"location":"Public/Tech/Software/Engineering/fidelity/","title":"Fidelity","text":"<p>The fidelity refers to the quality of the product, usually associated with prototype. </p> <p>Fidelity can vary in: - Visual design - Content - Interactivity</p> <p>Low fidelity (lo-fi) prototyping is a quick and easy way to translate high-level design concepts into tangible and testable parts.  - To check and test functionality first</p> <p>High fidelity (hi-fi) prototyping appear and function as similar as possible to the actual product that will ship.  - To test with real users / get final approval</p>"},{"location":"Public/Tech/Software/Engineering/frontend/","title":"Frontend","text":"<p>See: GUI</p> <p>Front-end refers to the software that allows the user to use and interact with the application and its data. <sup>1</sup> Front-end typically runs on the host computer. </p> <p>The front-end takes user input, and sends the needed request to the backend for data. The back-end returns with data that the front-end will process into something the user can use. </p> <ol> <li> <p>https://www.linkedin.com/pulse/front-end-back-end-database-side-structure-app-aleksandra-czajka/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Engineering/full%20stack/","title":"Full stack","text":"<p>A full stack developer is one who is well-rounded and works in both frontend and backend development. <sup>1</sup></p> <p>Generally, you are able to figure out problems yourself, and know enough to find the right resources for problems you can't solve yourself. <sup>2</sup></p> <ol> <li> <p>https://www.freecodecamp.org/news/what-is-a-full-stack-developer-back-end-front-end-full-stack-engineer/\u00a0\u21a9</p> </li> <li> <p>https://www.reddit.com/r/ExperiencedDevs/comments/rdqa1p/full_stack_vs_frontendbackend/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Engineering/kanban%20board/","title":"Kanban board","text":"<p>A kanban board helps track the progress of issues and tasks as they progress in the development process. </p>"},{"location":"Public/Tech/Software/Engineering/linter/","title":"Linter","text":"<p>A linter checks syntax and help you produce consistent code that follows specific style rules that you can define yourself or inherit from existing configurations. <sup>1</sup></p> <ol> <li> <p>https://discordjs.guide/preparations/setting-up-a-linter.html#installing-a-code-editor\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Engineering/prototype/","title":"Prototype","text":"<p>A prototype allows designers to present their ideas and designs, and see them in action. <sup>1</sup></p> <p>We use prototypes to ensure: - The design concept works as intended - Determine if people can use the product</p> <p>Way to prototype: - Paper prototyping - Clickable wireframe - Digital / Coded</p> <ol> <li> <p>https://blog.adobe.com/en/publish/2017/11/29/prototyping-difference-low-fidelity-high-fidelity-prototypes-use#what-a-prototype-is-and-what-it-isnt\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Engineering/route/","title":"Route","text":"<p>Routes are used to determine how the application responds to client request. </p> <p>Routes define the endpoints ([[URL]]) that clients can access and specify what content or actions the server should provide in response to different requests. </p>"},{"location":"Public/Tech/Software/Engineering/runtime%20environment/","title":"Runtime environment","text":"<p>Runtime environment is the environment where a program or application is executed. It's the hardware and software infrastructure that supports the running of a particular codebase in real time. </p> <p>Common examples of runtime environment include the Java Runtime Environment, as well as Node.js.</p>"},{"location":"Public/Tech/Software/Engineering/schema/","title":"Schema","text":"<p>A schema is the organization or structure for a database. <sup>1</sup></p> <ol> <li> <p>https://www.techtarget.com/searchdatamanagement/definition/schema#:~:text=In%20computer%20programming%2C%20a%20schema,modeling%20leads%20to%20a%20schema.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Engineering/scope/","title":"Scope","text":"<p>A scope is a \"boundary\": a defined set of requirements, conditions for a project. </p>"},{"location":"Public/Tech/Software/Engineering/software%20testing/","title":"Software testing","text":"<p>See: unit test</p> <p>Software testing refers to the process of finding bugs in code and ensuring the program works as intended. </p> <p>Automated testing will provide the input, analyze the output, and determine if the output was correct for the given input. </p> <p>An example is the autograder for GradeScope; it is done automatically and gives you immediate feedback, but you'll have to make do with the only the information it gives you. </p>"},{"location":"Public/Tech/Software/Engineering/stylesheet%20language/","title":"Stylesheet language","text":"<p>A stylesheet language is a programming language that controls how structured documents are presented. It allows content and design to be separate, and then that content can be reused and presented in many different ways. </p>"},{"location":"Public/Tech/Software/Engineering/unit%20test/","title":"Unit test","text":"<p>A unit test will operate in separate components of the program independently. </p>"},{"location":"Public/Tech/Software/Engineering/wireframe/","title":"Wireframe","text":"<p>A wireframe is a visual representation of a product page that the designer can use to arrange page elements. <sup>1</sup></p> <ol> <li> <p>https://blog.adobe.com/en/publish/2017/11/29/prototyping-difference-low-fidelity-high-fidelity-prototypes-use#what-a-prototype-is-and-what-it-isnt\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Engineering/Tech%20Stack/CSS/","title":"CSS","text":"<p>Cascading Style Sheets (CSS) is a stylesheet language used for describing the visual presentation of a web page. It allows developers and designers to create visually appealing, consistent, and responsive websites. </p> <p>Examples of frameworks for CSS are Tailwind CSS. </p>"},{"location":"Public/Tech/Software/Engineering/Tech%20Stack/Tailwind%20CSS/","title":"Tailwind CSS","text":"<p>See: Tailwind CSS cheat sheet</p> <p>Tailwind CSS is a utility-first CSS framework that streamlines web development by providing a set of pre-designed, atomic classes. In other words, you can write CSS within frontend files without having to go back to an external CSS file to make repetitive changes. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/Bash%20cheat%20sheet/","title":"Bash cheat sheet","text":"<p><pre><code>pwd\n</code></pre> - Print working directory, outputs the path to the current directory <pre><code>tree &lt;path&gt;\n</code></pre> - See how the child files are organized from the current directory <pre><code>cd &lt;path&gt;\n</code></pre> - Change directory, changes current directory to the file path given <pre><code>ls &lt;path&gt;\nls -a &lt;path&gt;\n</code></pre> - Lists the files contained in current directory     - Use <code>-a</code> to show hidden files <pre><code>mkdir &lt;flags&gt; &lt;path(s)&gt;\n</code></pre> - Makes directory, a new directory at the file path given <pre><code>mv &lt;flags&gt; &lt;sourcePath(s)&gt; &lt;destinationPath&gt;\n</code></pre> - Moves files from source to destination     - Can rename / overwrite files <pre><code>cp &lt;flags&gt; &lt;sourcePath(s)&gt; &lt;destinationPath&gt;\n</code></pre> - Copy files / directories     - Can overwrite existing files <pre><code>rm &lt;flags&gt; &lt;filePath(s)&gt;\n</code></pre> - Remove each specified file permanently         - Does not remove directories by default <pre><code>alias &lt;aliasName&gt;='&lt;commandToRun&gt;'\n</code></pre> - Substitutes the alias name with the command to be run     - Create shortcuts for tedious commands     - Extend the default behavior of commands <pre><code>alias rm='rm -i'          # confirm to delete file\nalias rm='mv -t -/.tash'  # move file to a trash directory\nalias cp='cp -b'          # make backup of destinationFile\nalias mv='mv -u'          # move only if sourceFile is newer\nalias hello=\"echo 'cow power'\"\n</code></pre></p> <p><pre><code>cat &lt;flags&gt; &lt;file&gt;\nless &lt;flags&gt; &lt;file&gt;\n</code></pre> - Print contents of file to screen; concatenate     - <code>less</code> outputs a page at a time, to scroll through     - Can search through file using the <code>/&lt;word&gt;</code> <pre><code>head &lt;flags&gt; &lt;file&gt;\n</code></pre> - Shows the first 10 lines of a file     - Use <code>-n &lt;number of lines&gt;</code> to print certain number of lines from file <pre><code>tail &lt;flags&gt; &lt;file&gt;\n</code></pre> - Shows the last 10 lines of a file <pre><code>nano &lt;flags&gt; &lt;file&gt;\n</code></pre> - Opens simple CLI text editor <pre><code>vim &lt;flags&gt; &lt;file&gt;\n</code></pre> - Another text editor <pre><code>man &lt;command&gt;\nman mkdir\nman stdio\n</code></pre> - System reference manuals - Contains details of all command behavior and flags - Documentation of c libraries <pre><code>tldr &lt;flags&gt; &lt;command&gt;\n</code></pre> - Lists the typical uses of a command</p> <p><pre><code>grep 'word-to-search' &lt;file_name&gt;\ngrep 'word-to-search' &lt;file_name1&gt; &lt;file_name2&gt; &lt;file_name3&gt; ...\ngrep 'pattern' &lt;file_name&gt;      # searches by regex pattern\n</code></pre> - Searches the given files for lines containing a match to a given pattern list <sup>1</sup></p> <p><pre><code>grep 'Gandalf' list_of_dwarves.txt \n\nif [[ $? != 0 ]] \nthen \n    echo \"Gandalf is not a dwarf\" \n    exit 1 \nelse \n    echo \"Gandalf is a dwarf\" \n    exit 0 \nfi\n</code></pre> - <code>$?</code> stores the exit code for the last command</p> <p><pre><code>p10k configure\n</code></pre> - Configure <code>powerlevel10k</code> looks</p> <ol> <li> <p>https://www.cyberciti.biz/faq/grep-in-bash/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/Bash/","title":"Bash","text":"<p>See: Advanced Bash-Scripting Guide, Bash cheat sheet</p> <p>Bash is a shell that is widely used in Linux and MacOS as the default shell. <sup>1</sup></p> <ol> <li> <p>https://www.freecodecamp.org/news/command-line-for-beginners/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/CLI/","title":"CLI","text":"<p>The CLI, or Command Line Interface, is a way for us to interact with the computer with the use of commands. </p> <p>Before GUI, users would use the CLI to interact with computers. </p> <p>It gives you finer and more direct control over the operating system and program behaviors. But, there are no safeguards against yourself. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/Fast%20File%20System/","title":"Fast File System","text":"<p>The Berkeley FFS was created as an improvement to the Unix File System. It consists of a fixed, asymmetrical tree index structure consisting of inodes (inode).</p> <p>It is a combination of direct, indexed, and multi-level indexed allocation.</p> <p>Characteristics: - Tree structure: Efficient random access - High degree: Each indirect block points to 100s of blocks; minimize seek - Fixed structure: Byte \\(n\\) will always be accessible via the same pointers - Asymmetric: Supports small and large files</p>"},{"location":"Public/Tech/Software/Operating%20Systems/GDB/","title":"GDB","text":"<p>GDB stands for the GNU debugger, which helps finds errors like segmentation faults. </p> <p>Canonical complication command line:  <pre><code>gcc [cflags] -o &lt;output&gt; &lt;input\n</code></pre></p> <p>Optimize for speed: (-O2)</p> <pre><code>gcc -Wall -Werror -O2 -o myprogram main.c\n</code></pre> <p>Enable debugging support (-g): <pre><code>gcc -Wall -Error -g myprogram main.c\n</code></pre> - To balance performance with debugging experience use <code>-Og</code> - Not recommended to use debugging along with other optimizations     - No optimization option is equivalent to <code>-O8</code></p> <p>Start GDB with the program to debug as an argument: <pre><code>gdb myprogram\n</code></pre></p> <p>Running the program: - Without any argument: <code>gdb run</code> - With arguments: <code>gdb run argv1, argv2...</code></p> <p>GDB offers an interactive shell: - Can ask <code>gdb help &lt;argument&gt;</code></p> <p>Possible scenarios: 1. Program doesn't have bugs 2. Best-case scenario: Segmentation fault 3. Worst-case scenario: Doesn't crash, but wrong output</p> <p>Backtrace: - First thing to do when getting a segfault     - Understand what is the sequence of calls that brought us there <pre><code>gdb backtrace\n</code></pre> Breakpoints: - Stop the program during the execution at a designated point - At a line: <pre><code>gdb break string-test.c.:13\nBreakpoint 1 at 0x4005ef: file string-test.c, line 13.\n</code></pre> - At a function: <pre><code>gdb b main\nBreakpoint 1 at 0x40059f: file string-test.c, line 8\n</code></pre> - At a condition: <pre><code>gdb b string-test.c:13 if i == 5\n</code></pre> - Show info of all declared breakpoints: <pre><code>gdb info b\n</code></pre></p> <p>Dealing with Breakpoints: - Once the program has stopped and the gdb shell is available, you can:     1. Continue the execution until the next breakpoint: <code>gdb continue</code> or <code>gdb c</code>     2. Execute only the next line of code and break again: <code>gdb step</code> or <code>gdb s</code>     3. Jump over function calls: <code>gdb next</code> or <code>gdb n</code> - Tip: Typing <code>&lt;enter&gt;</code> in the interactive gdb shell repeats the last command</p>"},{"location":"Public/Tech/Software/Operating%20Systems/GNU/","title":"GNU","text":"<p>GNU (GNU's Not Unix) is an Unix-like operating system built upon the philosophy of free and open source software. <sup>1</sup> The software in GNU is often used as building blocks for other operating systems, including Linux.</p> <ol> <li> <p>https://www.gnu.org/gnu/gnu-history.html\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/GUI/","title":"GUI","text":"<p>A graphical user interface (GUI) is a human-computer interface which uses windows, icons, menus, and other elements to make computer operation more intuitive and easy to use. <sup>1</sup></p> <ol> <li> <p>https://www.linfo.org/gui.html\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/IPC/","title":"IPC","text":"<p>Inter-process communication, or IPC, are the mechanisms provided by an operating system for processes (process) to manage shared data. </p> <p>Applications can use IPC, as either a client or server. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/Linux/","title":"Linux","text":"<p>Linux is a Unix-like kernel used with the GNU operating system, commonly referred to as the GNU/Linux system. <sup>1</sup></p> <p>There are many different variants of the GNU/Linux system, often called distros. <sup>1</sup></p> <p>Linux is incredibly flexible, as it can run on any hardware. You can probably find Linux running in most electronic devices. </p> <p>Due to Linux's open-source nature, it is highly customizable and users have complete control over every aspect of the system.</p> <p>Linux is popular amongst software developers for being light-weight, highly customizable, and highly compatible with most software and hardware. The features and tools that come with Linux give developers more power and control than other operating systems. </p> <ol> <li> <p>https://www.gnu.org/gnu/linux-and-gnu.html\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/access%20control/","title":"Access control","text":"<p>Access control is a security mechanism that regulates privileges on resources on an operating system. It ensures security, allowing only authorized users can perform certain actions on certain resources, such as files, databases, applications, or networks. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/bootstrapping/","title":"Bootstrapping","text":"<p>Bootstrapping refers to a self-starting process that is supposed to continue or grow without external input. <sup>1</sup></p> <ol> <li> <p>https://en.wikipedia.org/wiki/Bootstrapping#:~:text=The%20process%20involves%20a%20chain,itself%20by%20its%20own%20efforts.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/command/","title":"Command","text":"<p>A command is a request to perform an operation or run a program. </p> <p>You can add a flag which affect how a command can work. </p> <p><code>;</code>: - Execute commands in series <pre><code>echo -n \"hello \" ; echo \"world\"\nhello world\n</code></pre></p> <p><code>&amp;&amp;</code>: - Conditionally on success <pre><code>cat / &amp;&amp; echo \"world\"\ncat: /: Is a directory\ncd ~/slides/ &amp;&amp; du -sh Makefile\n4.0K  Makefile\n</code></pre></p> <p><code>||</code>: - Conditionally on failure <pre><code>cat / || echo \"Cat failed\"\ncat /: Is a directory\nCat failed\necho -n \"hello\" || echo \"world\"\nhello\n</code></pre></p>"},{"location":"Public/Tech/Software/Operating%20Systems/compile/","title":"Compile","text":"<p>To compile is the process of transforming a computer [[program]] written in a given programming language, into a set of instructions in another format or language. </p> <p>A compiler is a computer program to execute that task. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/concurrency/","title":"Concurrency","text":"<p>Concurrency is the composition of independently executing tasks ([[task]]). </p> <p>It is different from sequential execution, where tasks can start, run, and complete in overlapping time periods. </p> <p>It helps decompose complex problems into simpler ones, breaking the task into multiple processes (process). </p> <p></p>"},{"location":"Public/Tech/Software/Operating%20Systems/console/","title":"Console","text":"<p>The console is the physical device that allows you to interact with the computer. <sup>1</sup></p> <p>It's the peripherals that act between you and the computer: Keyboard, mouse, computer screen. You interact with your computer through your console. <sup>1</sup></p> <ol> <li> <p>https://www.freecodecamp.org/news/command-line-for-beginners/\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/cronjob/","title":"Cronjob","text":"<p>A cronjob refers to the <code>cron</code> command-line utility, a [[job-scheduler]] on Unix operating systems (operating system) - it runs scripts (script) at fixed times or intervals. <sup>1</sup></p> <p><code>cron</code> comes from Chronos, the Greek word for time. </p> <ol> <li> <p>https://en.wikipedia.org/wiki/Cron\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/deadlock/","title":"Deadlock","text":"<p>A group of tasks ([[task]]) is deadlocked if each task in the group is waiting for an event that only another task in the group can trigger.</p> <p>None of the tasks can run, release resources, or be awakened.</p> <p>See: Philosopher table example. </p> <p>A deadlock is the ultimate stage of starvation. </p> <p>Characteristics: - Mutual exclusion / bounded resources - Hold and wait - No preemption - Circular wait</p> <p>Strategies: - Ostrich algorithm     - Mitigation: Make it less painful for users - Detection and recovery - Dynamic avoidance; careful resource allocation - Prevention; negating one of the conditions</p>"},{"location":"Public/Tech/Software/Operating%20Systems/directory/","title":"Directory","text":"<p>A directory provides names for files. </p> <p>A directory consists of a group of named files or subdirectories. A directory itself is a file, which has a list of mappings from filenames to file numbers. It is only directly accessible by the operating system. </p> <p>It is a mapping from human-readable file names to file metadata locations.</p> <p></p>"},{"location":"Public/Tech/Software/Operating%20Systems/dual-mode%20operation/","title":"Dual mode operation","text":"<p>Dual-mode operation makes a trade-off between a user mode and kernel mode when executing programs. </p> <p>There are distinct execution modes supported directly in hardware: - In kernel mode, a process has full privilege with the hardware - In user mode, a process has limited privilege on the hardware</p> <p>What dual-mode operation provides for the hardware: - Privileged instructions     - Exception handler: will talk to kernel if a process has gone bad - memory protection - Timer interrupts - Mode switch</p>"},{"location":"Public/Tech/Software/Operating%20Systems/environment/","title":"Environment","text":"<p>An environment is the context or setting a piece of software operates on - the current hardware and software. </p> <p>In an environment, key aspects are: - Configuration: OS (operating system) settings, software versions, network - Resources: CPU, memory, storage, network - dependency - access control</p>"},{"location":"Public/Tech/Software/Operating%20Systems/exit/","title":"Exit","text":"<p>An exit occurs when the command finishes. </p> <p>A <code>0</code> indicates success. Any other value indicates error. </p> <pre><code>echo \"Hello\" &gt; /dev/null\necho $?\n0\n\ncat missing.txt\ncat: missing.txt: No such file or directory\necho $?\n1\n</code></pre>"},{"location":"Public/Tech/Software/Operating%20Systems/file%20path/","title":"File path","text":"<p>A file path shows the path to a location of a certain file in the file system.</p> <p>There are different types of file paths: - Absolute     - <code>/home/jacob/school</code> - Relative     - <code>./school</code>     - <code>../../etc</code> - Special Entries     - <code>./</code> refers to your current location     - <code>../</code> refers to one directory above the current location</p>"},{"location":"Public/Tech/Software/Operating%20Systems/file%20system/","title":"File system","text":"<p>A file system of an operating system generally has a tree data structure for file which branches from the [[root 1|root 1]] to different directories. </p> <p></p>"},{"location":"Public/Tech/Software/Operating%20Systems/file/","title":"File","text":"<p>A file is an abstraction that provides persistent, described data. A logical storage unit.</p> <p>The metadata of a file has attributes added and managed by the operating system. - Size, creation / modification time, owner permissions, etc. - File's content </p>"},{"location":"Public/Tech/Software/Operating%20Systems/flag/","title":"Flag","text":"<p>A flag can be added to a command to affect how it works. </p> <p>Flags are combinational and the order does not matter. </p> <p><code>-h</code>: Help</p> <p><code>-V</code>: Version</p> <p><code>-v</code>, <code>-vv</code>, <code>-vvv</code>, <code>--quiet</code>: Configurable verbosity level</p> <p><code>-r</code>: Recursive</p>"},{"location":"Public/Tech/Software/Operating%20Systems/hard%20link/","title":"Hard link","text":"<p>A hard link </p>"},{"location":"Public/Tech/Software/Operating%20Systems/inode/","title":"Inode","text":"<p>An inode contains a file's [[metadata]] and a set of pointers to locate its [[data blocks]]. </p> <p>The index structure is a combination of all of the indexed-based approaches. Files are represented as a fixed, asymmetric tree, with 4KiB data blocks as leaves. </p> <p>Inodes are stored consecutively in a big array, and indexed via an i-number. </p> <p></p>"},{"location":"Public/Tech/Software/Operating%20Systems/instruction%20set/","title":"Instruction set","text":"<p>See: instruction</p> <p>An instruction set is a group of command for a processor in machine language.</p> <p>Common instruction sets include <code>x86_64</code>, <code>AArch64</code>, and <code>RISC-V</code>. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/interrupt/","title":"Interrupt","text":"<p>An interrupt is a way for an external process to interrupt the normal flow of a CPU's execution. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/kernel/","title":"Kernel","text":"<p>The kernel is a computer program that is at the core of a computer's operating system. It has complete control over everything that occurs in the system. <sup>1</sup></p> <p>The kernel interacts with the shell and other programs, as well as the computer's hardware, including the processor, memory, and disk drives. <sup>1</sup> </p> <p>Kernel parameters can be accessed through a pseudo file system <code>/sys</code> <pre><code>cat /sys/class/input/mouse0/device/name\nLogitech USB Optical Mouse\ncat /sys/class/hwmon/hwmon3/temp1_crit\n120000\ncat /sys/class/leds/input2::scrolllock/brightness\n0\n</code></pre> - Some system variables can be changed on the fly <pre><code>sudo bash -c \"echo 1 &gt; /sys/class/leds/input2::scrollock/brightness\"\n</code></pre></p> <ol> <li> <p>https://www.linfo.org/kernel.html\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/library/","title":"Library","text":"<p>A library refers to a collection of precompiled (compile), reusable files, functions, scripts, routines, and other resources that can be referenced for development. <sup>1</sup></p> <ol> <li> <p>https://www.heavy.ai/technical-glossary/open-source-library\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/lock/","title":"Lock","text":"<p>A lock is a synchronization variable that provides mutual exclusion; a thread will be guaranteed to proceed.</p> <p>There are two states: <code>locked</code> and <code>free</code></p> <p>For example, a lock can stop an interrupt from preemptively ([[preemption]]) stopping a thread. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/machine%20code/","title":"Machine code","text":"<p>Machine code is the elemental language of computers, consisting of binary numbers (binary), which is read by the processor. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/memory%20allocation/","title":"Memory allocation","text":"<p>Memory allocation is creating space in a spot of memory where data can be stored.</p> <p>When declaring static or global variables, static allocation creates a block of space, a fixed size of the variable, and is never freed. <sup>1</sup></p> <p>In cases where the size of the data structure is not known before the program runs, you would want to do dynamic memory allocation. In other words, the size of the data structure is changed during runtime. <sup>2</sup></p> <ol> <li> <p>https://www.gnu.org/software/libc/manual/html_node/Memory-Allocation-and-C.html\u00a0\u21a9</p> </li> <li> <p>https://www.geeksforgeeks.org/dynamic-memory-allocation-in-c-using-malloc-calloc-free-and-realloc/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/memory%20protection/","title":"Memory protection","text":"<p>Memory protection is done by the operating system to enforce memory boundaries to a process. </p> <p>If the code tries to access unauthorized memory, it will call an [[exception]]. </p> <p>Some ways to protect memory are: - Basic segmentation     - Memory area defined by base and bound pair - Virtual memory     - Runtime translation between virtual and physical address spaces</p>"},{"location":"Public/Tech/Software/Operating%20Systems/mount/","title":"Mount","text":"<p>Mounting is a process where a computer's operating system makes files (file) and directories (directory) on a storage device available for users to access via the computer's file system. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/operating%20system/","title":"Operating system","text":"<p>An operating system (OS) is an interface between the user and the computer hardware. This interface manages the basic software and hardware resources of a computer, to allow other software / hardware to interact with the computer's hardware. Examples include memory management, process management, and handling input / output device. <sup>1</sup> </p> <p>When the computer boots up, the operating system is the first thing it loads, in particular the kernel.</p> <ol> <li> <p>https://www.tutorialspoint.com/operating_system/os_overview.htm\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/path/","title":"Path","text":"<p>A path is a special variable used to find the executable of a program. The shell searches <code>$PATH</code> when you enter a command. </p> <p><pre><code>which ls\n/usr/bin/ls\necho $PATH\n/usr/local/sbin:/usr/local/bin:/usr/bin:/opt/cuda-10.1/bin:/usr/lib/jvm/default/bin ...\necho $PATH | sed 's/:/\\n/g'\n/usr/local/sbin\n/usr/local/bin\n/usr/bin\n/opt/cuda-10.1/bin\n/usr/lib/jvm/default/bin\n</code></pre> - You can run a program without searching for its path <pre><code>./hello\nHello World!\n</code></pre></p> <pre><code>hello\nbash: hello: command not found\nsudo mv hello/usr/local/bin\nhello\nHello World!\n</code></pre>"},{"location":"Public/Tech/Software/Operating%20Systems/pipe%20%28command%29/","title":"Pipe (command)","text":"<p>A pipe is used to combine two or more commands. It will take the output of a command and use that as the input for the next command. <sup>1</sup></p> <p>Using the pipe '|' character:  <pre><code>ls -l / | tail -n3\n</code></pre></p> <p>You can chain pipes together. </p> <ol> <li> <p>https://www.redhat.com/sysadmin/pipes-command-line-linux\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/privilege/","title":"Privilege","text":"<p>Privilege refers to the level of access to the hardware of a computer. </p> <p>It's necessary to have a separation for a few reasons: - Security     - To prevent unauthorized access and potential misuse of hardware devices - Isolation     - Keeping processes (process) from interfering with each other - Resource management     - To allocate hardware resources efficiently - System Integrity     - To ensure critical system files, configurations, and data are protected from unauthorized modifications that can jeopardize the system</p>"},{"location":"Public/Tech/Software/Operating%20Systems/process/","title":"Process","text":"<p>A process is a program or command that is actually running on the computer. <sup>1</sup> The operating system can run many different processes at the same time. <sup>1</sup></p> <p></p> <p>Process commands on the CLI:</p> <p><code>Ctrl+C</code>: - Stops a process <pre><code>sleep 60\n^C\n</code></pre></p> <p><code>Ctrl+Z</code>: - Pause a process <pre><code>sleep 5\n^Z\n[1]+ Stopped          sleep 5\necho \"Hello\"\nHello\n</code></pre></p> <p><code>fg</code>, <code>bg</code>: - Resume in either foreground or background <pre><code>fg\nsleep 5\n</code></pre></p> <pre><code>bg\n[1]+ sleep 5 &amp;\necho \"What now?\"\nWhat now?\n[1]+   Done           sleep 5\n</code></pre> <p><code>&amp;</code>: - Start a process in the background <pre><code>cat /dev/random &gt; /dev/null &amp;\n</code></pre></p> <p><code>jobs</code>: - Lists all jobs (processes) <pre><code>jobs\n[1]-   Stopped                   cat /dev/random &gt; /dev/null\n[2]+   Stopped                   sleep 10\n</code></pre></p> <p><code>kill</code>: - Terminate jobs (processes) <pre><code>kill %1\n[1]+   Terminated                cat /dev/random &gt; /dev/null\n</code></pre></p> <ul> <li> <p>Jobs are tied to the terminal session</p> <ul> <li>Exiting terminal kills stopped and backgrounded jobs</li> </ul> </li> <li> <p>Protect background job from terminal exit: <pre><code>nohup sleep 10 &amp;           // \"no hang up\" for a new job\ndisown %1                  // For a job already running\n</code></pre></p> </li> </ul> <ol> <li> <p>https://www.ibm.com/docs/pt-br/aix/7.1?topic=administration-commands-processes\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/processor/","title":"Processor","text":"<p>A processor fetches an instruction from memory and executes the instruction on data in the register. </p> <p>They are characterized by an instruction set. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/redirection/","title":"Redirection","text":"<p>*See: * stream</p> <p>A redirection is a way to change the standard input / output of the CLI to point to and from files. <sup>1</sup> You can redirect <code>stdout</code> to a file like this: <pre><code>echo \"Hello World!\" &gt; hello.txt\ncat hello.txt\n</code></pre></p> <p>Redirect <code>stdin</code>:  <pre><code>cat &lt; hello.txt\n</code></pre></p> <p>Append <code>stdout</code> to a file: <pre><code>cat &lt; hello.text &gt;&gt; hello_copy.txt\n</code></pre></p> <ol> <li> <p>https://www.guru99.com/linux-redirection.html\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/root/","title":"Root","text":"<p>Root is a user account for administrative purposes, and typically has the highest access rights on the system. <sup>1</sup></p> <p>You can use <code>sudo</code> to perform actions as root. - Short for \"super user do\" - Actions run as root can damage your system</p> <p>Some things do require root privileges, if they change any files in the root. </p> <ol> <li> <p>https://www.ssh.com/academy/pam/root-user-account#:~:text=Root%20is%20the%20superuser%20account,account%2C%20regardless%20of%20the%20name.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/script/","title":"Script","text":"<p>A script is a series of instructions (command) that we can save on a file and later on execute whenever we want. <sup>1</sup></p> <ol> <li> <p>https://www.freecodecamp.org/news/command-line-for-beginners/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/segmentation%20fault/","title":"Segmentation fault","text":"<p>A segmentation fault occurs when a program attempts to access a memory location it is not allowed to access. <sup>1</sup></p> <ol> <li> <p>https://en.wikipedia.org/wiki/Segmentation_fault\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/sequential%20execution/","title":"Sequential execution","text":"<p>Sequential execution is a single stream of statements executed in order. </p> <p>They can only be slightly disrupted by signals (signal). </p> <p></p>"},{"location":"Public/Tech/Software/Operating%20Systems/shebang/","title":"Shebang","text":"<p>A shebang is the character sequence <code>#!</code>, used at the beginning of a file, to tell the operating system how to interpret an executable file. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/shell/","title":"Shell","text":"<p>A shell is a program that provides the text-only interface for Linux and other Unix-like operating systems. Its primary function is to read a command typed into a console or terminal window in a GUI and then execute it. <sup>1</sup> It is essentially the command interpreter. <sup>2</sup></p> <p>The term shell gets its name from being the outer layer of an operating system. A shell is an interface between the user and the internal parts of the operating system, including the kernel. <sup>1</sup></p> <ol> <li> <p>https://www.linfo.org/shell.html\u00a0\u21a9\u21a9</p> </li> <li> <p>https://www.ibm.com/docs/pt-br/aix/7.1?topic=administration-commands-processes\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/signal/","title":"Signal","text":"<p>A signal is a form of inter-process communication (IPC) - effectively the software notification system. It may stem from the process' (process) own actions (<code>SIGSEGV</code>) or from external events (<code>SIGINT</code>). </p> <p>With a signal, you can choose to handle it with a signal handler, or ignore it with a mask. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/source%20code/","title":"Source code","text":"<p>Source code refers to written code by programmers. <sup>1</sup></p> <ol> <li> <p>https://www.washington.edu/research/glossary/source-code-and-object-code/#:~:text=Source%20code%20is%20generally%20understood,compiled%20with%20a%20C%20compiler.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/starvation/","title":"Starvation","text":"<p>Starvation is when one or more tasks [[task]] of a group are indefinitely blocked.</p> <p>These tasks are not able to make progress; but the group as a whole is still making progress.</p>"},{"location":"Public/Tech/Software/Operating%20Systems/stream%20cheat%20sheet/","title":"Stream cheat sheet","text":"<p>See: stream <code>head</code>: - Sends the first <code>n</code> lines of its input to its output <pre><code>head -n3\n</code></pre></p> <p><code>tail</code>:  - Sends the last <code>n</code> lines of its input to its output <pre><code>tail -n3\n</code></pre></p> <pre><code>ls -l / &gt; temp.txt\ntail -n3 &lt; temp.txt\n</code></pre> <p><code>grep</code>:  - Searches the input stream for a string - Outputs every line that contains the string <pre><code>history | grep tail\n</code></pre></p> <p><code>cut</code>: - Removes sections from each line of the input - Useful when filtering columns from input <pre><code>cat foo.txt\nA,B,C,D\nA,B,C,D\nB,B,C,D\nD,C,B,A\ncat foo.txt | cut -d \",\" -f1,4\nA,D\nB,D\nD,A\n</code></pre></p> <p><code>sort</code>: - Sorts the input and sends it to <code>stdout</code> - Defaults to alphanumeric sort, but it has many sorting options</p> <p><code>uniq</code>: - Outputs the unique lines in the input - Only detects repeated lines if they are adjacent     - Input needs to be sorted first <pre><code>sort foo.txt | uniq     // Display each line once\nsort foo.txt | uniq -u  // Display only unique lines\nsort foo.txt | uniq -d  // Display only duplicated lines\nsort foo.txt | uniq -c  // Display frequency of each line\n</code></pre></p> <p><code>tee</code>: - Read from standard input and write to standard output and files <pre><code>echo 1 | sudo tee /sys/class/leds/input2::scrolllock/brightness\n</code></pre></p> <p><code>sed</code>:  - Stream editor - Allows for filtering, substitution, addition, and deletion of text from file <pre><code>\n</code></pre></p> <p><code>tr</code>: - Text editor - Allow for replacing, deleting characters, character sets, newlines, etc.</p>"},{"location":"Public/Tech/Software/Operating%20Systems/stream/","title":"Stream","text":"<p>See: stream cheat sheet</p> <p>A stream refers to a collection of text. </p> <p>There are generally two streams in the command line:  - <code>stdin</code> for user input (default is keyboard) - <code>stdout</code> for user output (default is display)</p>"},{"location":"Public/Tech/Software/Operating%20Systems/symlink/","title":"Symlink","text":"<p>A symbolic link, or symlink, is a file whose purpose is to point to (target) another file or directory with a specified path. <sup>1</sup></p> <p>In a file system, a file name points to an inode containing the file's metadata. Unlike a hard link, the symlink will point to the name of the file. <sup>2</sup></p> <ol> <li> <p>https://en.wikipedia.org/wiki/Symbolic_link\u00a0\u21a9</p> </li> <li> <p>https://stackoverflow.com/questions/185899/what-is-the-difference-between-a-symbolic-link-and-a-hard-link\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/synchronization%20variable/","title":"Synchronization variable","text":"<p>A synchronization variable is used to coordinate the execution of a process based on [[asynchronous events]]. </p> <p>Some techniques include [[semaphore]], lock, and [[condition variable]]. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/system%20call/","title":"System call","text":"<p>A system call is a request from the kernel to perform an operation on its behalf. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/terminal/","title":"Terminal","text":"<p>A terminal is a text input and output environment. It is a program that acts as a wrapper and allows us to enter command that the computer processes. <sup>1</sup></p> <p>It's the 'window' where you enter the commands your computer will process. [^1[]</p> <p>The terminal is a program like any other, so you can download many other terminals to fit your needs. <sup>1</sup></p> <ol> <li> <p>https://www.freecodecamp.org/news/command-line-for-beginners/\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/text%20editor/","title":"Text editor","text":"<p>A text editor is a program that edits plain text. They are sometimes known as \"notepad\" software. <sup>1</sup></p> <ol> <li> <p>https://en.wikipedia.org/wiki/Text_editor\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Operating%20Systems/timer%20interrupt/","title":"Timer interrupt","text":"<p>A timer interrupt is a type of interrupt that is generated by a hardware timer at regular intervals. </p> <p>This timer will periodically interrupt and access the situation of the processes (process) running. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/tokenize/","title":"Tokenize","text":"<p>To tokenize means to take a line of input and separate it into parts that can be individually processed by the shell. </p>"},{"location":"Public/Tech/Software/Operating%20Systems/virtualization/","title":"Virtualization","text":"<p>Virtualization is an abstraction layer over </p>"},{"location":"Public/Tech/Software/Operating%20Systems/volume/","title":"Volume","text":"<p>A volume is a collection of physical storage resources that form a logical storage device containing a file system. </p> <p>A volume can be: - A whole disk - A partition on a disk - Multiple disks</p> <p></p>"},{"location":"Public/Tech/Software/Operating%20Systems/wrapper/","title":"Wrapper","text":"<p>A wrapper is used to make writing computer programs easier by abstracting the details of the underlying implementation of a program. <sup>1</sup> The wrapper's main purpose is to provide a 'different' way to use the wrapped object, such as a simpler interface, or adding some functionality. <sup>2</sup> </p> <p>It should simplify programs and abstract the complexity. </p> <ol> <li> <p>https://en.wikipedia.org/wiki/Wrapper_function\u00a0\u21a9</p> </li> <li> <p>https://stackoverflow.com/questions/3293752/where-and-how-is-the-term-used-wrapper-in-programming-what-does-it-help-to-do\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/Big-O%20notation/","title":"Big O notation","text":"<p>Big-O notation represents the upper bound of the running time of an algorithm. It gives the worst case complexity of an algorithm. <sup>1</sup></p> <pre><code>O(g(n)) = { f(n): there exist positive constants c and n0\n            such that 0 \u2264 f(n) \u2264 cg(n) for all n \u2265 n0 }\n</code></pre> <p>It can also be said that <code>g</code> is \"at most\" f.</p> <p></p> <ol> <li> <p>https://www.programiz.com/dsa/asymptotic-notations\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/DFA/","title":"DFA","text":"<p>A DFA is a mathematical model of an idealized computational device with essentially no \"memory\" other than a finite set of states. </p> <p>A list of rules called transitions indicate, given the current state and symbol, what is the next state the device enters. </p> <p>Each state is labelled with a boolean output; the automaton reports a \"yes\" or \"no\" output. </p> <p></p>"},{"location":"Public/Tech/Software/Theory/Myhill-Nerode%20theorem/","title":"Myhill Nerode theorem","text":"<p>The Myhill-Nerode theorem is used to prove whether a language is regular or not. </p> <p>For any language \\(L\\in \\Sigma^*\\), say two strings (string) \\(x, y \\in \\Sigma^*\\) have a separating (distinguishing) extension \\(z\\in \\Sigma^*\\) if \\(xz\\in L \\iff yz \\not \\in L\\). (Exactly one of \\(xz\\) or \\(yz\\) is in \\(L\\)). In this case, we say \\(x\\) and \\(y\\) are L-separable.  - It's okay if one of them is in \\(L\\), if the other one is not in \\(L\\) - \\(xz \\not \\in L \\iff yz \\not \\in L\\) also holds true</p> <p>We say \\(x\\) and \\(y\\) are L-equivalent, written \\(x \\sim y\\) if they are not L-separable, i.e. for all \\(z\\in \\Sigma^*\\), \\(xz\\in L \\iff yz \\in L\\). </p> <p>A language \\(L\\) is a regular language if and only if \\(\\sim_L\\) defines a finite number of equivalence classes. Furthermore, the number of equivalence classes of \\(\\sim_L\\) equals the number of states in the smallest DFA that decides. </p> <p>Corollary - For a language \\(L\\), if \\(\\sim_L\\) defines an infinite number of equivalence classes, then \\(L\\) is not a regular language. </p>"},{"location":"Public/Tech/Software/Theory/NFA/","title":"NFA","text":"<p>A non-deterministic finite automata, or NFA, is a DFA with the following differences: - An NFA state may have any number (including \\(0\\)) of transition arrows out of a [[state]], for the same input symbol.  - An NFA may change states without reading any input (an \\(\\epsilon\\)-transition) - If there is a series of choices (when there is a choice) to reach an accept state after reading the whole string, than the NFA accepts. Otherwise, the NFA rejects.</p>"},{"location":"Public/Tech/Software/Theory/NP-complete/","title":"NP complete","text":"<p>A problem is NP-complete if it is in the class NP and it is as hard as the hardest problems in NP. <sup>1</sup></p> <p>They provide a way to show that certain problems are intrinsically difficult to solve. There is no known polynomial time algorithm for solving NP-complete problems. </p> <ol> <li> <p>https://www.autoblocks.ai/glossary/np-completeness\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/NP-hard/","title":"NP hard","text":"<p>A problem is classified as NP-hard if it is at least as hard as the hardest problems in the complexity class NP. </p> <p>Informally, the problem is as difficult as the hardest problems for which a solution can be verified in polynomial time. </p>"},{"location":"Public/Tech/Software/Theory/NP/","title":"NP","text":"<p>See: P</p> <p>NP refers to the class of problems where given a potential solution, we can quickly verify that it is correct. </p>"},{"location":"Public/Tech/Software/Theory/P/","title":"P","text":"<p>See: NP</p> <p>P refers to the class of problems where we can quickly decide whether there's a solution.</p>"},{"location":"Public/Tech/Software/Theory/RRG/","title":"RRG","text":"<p>An RRG is a type of regular language whose rules are all of the form:</p> \\[ A \\implies \\epsilon \\text{ or } A \\implies bC \\]"},{"location":"Public/Tech/Software/Theory/Turing%20machine/","title":"Turing machine","text":"<p>A Turing machine is a finite state machine with an unbounded read / write tape.  </p> <p>There are some key difference compared to a FSM: - When writing, it can write more than just what the input alphabet allows. - The tape head (pointing to a character in the input) can move left or right.  - There is one accept and reject state, that halts the machine.</p> <p>Example for \\(P = \\{ w\\in \\{0, 1\\}^* |  w = w^2 \\}\\):</p> <p></p>"},{"location":"Public/Tech/Software/Theory/abstraction/","title":"Abstraction","text":"<p>Abstraction is the principle of simplifying a complex system into a basic model. By abstracting the details, the new model makes it easier to work with the complex system. <sup>1</sup></p> <p>A car has many systems: Brakes, transmission, suspension system, battery, etc. But we don't need to understand how each of those systems work to be able to drive a car; we just need to use the interface, i.e. the steering wheel, accelerator, and brake pedal, to use the car. We are not concerned with the inner details of the car when driving. <sup>1</sup></p> <ol> <li> <p>https://www.freecodecamp.org/news/what-is-abstraction-in-programming/\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/algorithm%20analysis/","title":"Algorithm analysis","text":"<p>See: theta notation, Big-O notation, omega notation</p> <p>Algorithm analysis generally refers to the \"complexity analysis\" of an algorithm: how the characteristics of the algorithm changes with respect to changes in parameters.</p> <p>In other words, how does the input size of an algorithm affect: <sup>1</sup> - runtime (instructional steps) - space (in memory) - N / W (data transferred / network consumption) - power consumption (for battery life) - CPU registers (physical space used on the processor)</p> <p>Algorithm analysis is useful to measure the efficiency of an algorithm, since it is machine-independent. </p> <ol> <li> <p>https://www.youtube.com/watch?v=xGYsEqe9Vl0\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/algorithm/","title":"Algorithm","text":"<p>See: algorithm analysis</p> <p>An algorithm is a procedure that takes an input and produces an output. <sup>1</sup></p> <ol> <li> <p>https://dahlan.unimal.ac.id/files/ebooks/2009%20Introduction%20to%20Algorithms%20Third%20Ed.pdf\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/alphabet/","title":"Alphabet","text":"<p>See: symbol</p> <p>An alphabet is any nonempty finite set. </p> <p>It is sometimes represented as \\(\\Sigma\\). </p>"},{"location":"Public/Tech/Software/Theory/concurrent%20programming/","title":"Concurrent programming","text":"<p>Concurrent programming is a paradigm where tasks are executed simultaneously. </p> <p>Examples include Go, Rust, Erlang</p>"},{"location":"Public/Tech/Software/Theory/data%20structure/","title":"Data structure","text":"<p>A data structure is a way to store and organize data. You can access and modify the data in a data structure. <sup>1</sup></p> <ol> <li> <p>https://dahlan.unimal.ac.id/files/ebooks/2009%20Introduction%20to%20Algorithms%20Third%20Ed.pdf\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/data/","title":"Data","text":"<p>Data is distinct pieces of information, quantified or qualified by some identifier which gives it meaning. <sup>1</sup> <sup>2</sup></p> <p>Raw data is information in a pure form like characters and numbers. We process raw data through many methods to then produce useful data that gives us key insights. </p> <ol> <li> <p>https://en.wikipedia.org/wiki/Data_(computer_science)\u00a0\u21a9</p> </li> <li> <p>https://www.geeksforgeeks.org/what-is-data/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/decision/","title":"Decision","text":"<p>A decision problem determines if there is any solution to a problem. </p>"},{"location":"Public/Tech/Software/Theory/dynamic%20memory/","title":"Dynamic memory","text":"<p>Dynamic memory is when memory allocation is done at runtime. <sup>1</sup></p> <ol> <li> <p>https://byjus.com/gate/difference-between-static-and-dynamic-memory-allocation-in-c/#:~:text=1-,When%20the%20allocation%20of%20memory%20performs%20at%20the%20compile%20time,is%20called%20dynamic%20memory%20allocation.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/dynamic%20programming/","title":"Dynamic programming","text":"<p>Dynamic programming is optimization over [[recursion]]. Whenever we see a recursive solution that has repeated calls for the same inputs, we can optimize it using dynamic programming. <sup>1</sup></p> <p>The idea is to store the results of the sub-problems, so we don't have to recompute them. </p> <ol> <li> <p>https://www.geeksforgeeks.org/dynamic-programming/#\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/functional%20programming/","title":"Functional programming","text":"<p>Functional programming is a paradigm which consists of the composition of functions (pure function). It can evaluate mathematical functions. </p> <p>Examples include Lisp, Haskell, Ocaml</p>"},{"location":"Public/Tech/Software/Theory/graph/","title":"Graph","text":"<p>A graph is a data structure consisting of vertices and edges. <sup>1</sup></p> <p>A vertex is often referred to as a node.<sup>1</sup></p> <p>More formally, a graph is composed of a set of \\(vertices(V)\\) and a set of \\(edges(E)\\). The graph is denoted by \\(G(E, V)\\).<sup>1</sup></p> <ol> <li> <p>https://www.geeksforgeeks.org/graph-data-structure-and-algorithms/\u00a0\u21a9\u21a9\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/heap/","title":"Heap","text":"<p>A heap is dynamic memory allocated to a program. <sup>1</sup></p> <p>In an operating system, </p> <ol> <li> <p>https://www.geeksforgeeks.org/what-is-a-memory-heap/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/immutable/","title":"Immutable","text":"<p>Immutable refers to the state of an object - specifically, that it cannot be modified after creation. <sup>1</sup></p> <p>This is in contrast to mutable objects, where they can be modified after creation. </p> <ol> <li> <p>https://www.tiny.cloud/blog/mutable-vs-immutable-javascript/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/imperative%20programming/","title":"Imperative programming","text":"<p>Imperative programming is a paradigm that follows a sequence of commands, which updates the state of a program. </p> <p>Examples include C, C++, Go, Cobol, Fortran, Java. </p>"},{"location":"Public/Tech/Software/Theory/iterator/","title":"Iterator","text":"<p>An iterator is an object that is used to iterate through a collection like an [[array]], [[list]], tuple, [[dict]], and set.</p>"},{"location":"Public/Tech/Software/Theory/language/","title":"Language","text":"<p>A language in computer science theory is a set of strings (string). It can also be thought of as a decision problem. </p>"},{"location":"Public/Tech/Software/Theory/logic%20programming/","title":"Logic programming","text":"<p>Logic programming is a paradigm which consists of a set of constraints or rules. It checks to satisfy these constraints via search.</p> <p>Examples include Prolog. </p>"},{"location":"Public/Tech/Software/Theory/memoization/","title":"Memoization","text":"<p>Memoization is an optimization technique that stores computation results in cache, and retrieving that information from the cache the next time it's needed instead of computing it again. <sup>1</sup></p> <ol> <li> <p>https://www.freecodecamp.org/news/memoization-in-javascript-and-react/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/node/","title":"Node","text":"<p>A node is a basic unit of a data structure. A Node contains data and also may link to other nodes.<sup>1</sup></p> <ol> <li> <p>https://www.wikiwand.com/en/Node_(computer_science)\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/object-oriented%20programming/","title":"Object oriented programming","text":"<p>Object-oriented programming is a paradigm based around the concept of objects that encapsulate the data and the methods acting on that data.</p> <p>Examples include Smalltalk, Java, C++, Go (sort of). </p>"},{"location":"Public/Tech/Software/Theory/omega%20notation/","title":"Omega notation","text":"<p>Omega notation represents the lower bound of the running time of an algorithm. It is the base case complexity of an algorithm. <sup>1</sup></p> <pre><code>\u03a9(g(n)) = { f(n): there exist positive constants c and n0 \n            such that 0 \u2264 cg(n) \u2264 f(n) for all n \u2265 n0 }\n</code></pre> <p></p> <ol> <li> <p>https://www.programiz.com/dsa/asymptotic-notations\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/optimization/","title":"Optimization","text":"<p>An optimization problem is like search, while also maximizing an objective function. </p>"},{"location":"Public/Tech/Software/Theory/programming%20language/","title":"Programming language","text":"<p>A programming language is some language for [[programming]].</p> <p>To break it down, language meaning a set of rules specifying valid syntax and its associated semantics, and to make a computer perform a particular [[task]].</p> <p>A programming language is developed to: - To fit an application domain     - artificial intelligence     - [[scientific computing]]     - Fit a business need     - [[systems programming]] - Languages combine features of previous languages - Languages are still evolving     - Java 20, C++23, go1.117\u0192</p> <p>Besides syntax and semantics, there are other factors in choosing a programming language: - Ecosystem: libraries, version control - Toolchain: testing, formatting, debugging - Programming language: Syntax and semantics, compiler</p>"},{"location":"Public/Tech/Software/Theory/pure%20function/","title":"Pure function","text":"<p>A pure function in [[programming]] is a function with the following properties:</p> <ol> <li>A pure function always produce the same outputs for the same inputs</li> <li>A pure function is immutable i.e. it will not affect any arguments or variables outside its scope</li> </ol>"},{"location":"Public/Tech/Software/Theory/regular%20expression/","title":"Regular expression","text":"<p>A regular expression is a string encoding a \"pattern\" that matches some set of strings, used in many programming languages and applications such as <code>grep</code>. </p>"},{"location":"Public/Tech/Software/Theory/regular%20language/","title":"Regular language","text":"<p>The class of regular languages is the set of all languages (language) decided by some DFA, NFA, RRG, or regular expression. </p>"},{"location":"Public/Tech/Software/Theory/root/","title":"Root","text":"<p>A root is the first node in a tree data structure. </p>"},{"location":"Public/Tech/Software/Theory/runtime/","title":"Runtime","text":"<p>Runtime is the period of time while a program is running on a computer. </p> <p>There are different ways to describe runtime: - Big-O notation - small-o notation - omega notation - small omega notation -  Common algorithmic runtimes from fastest to slowest are: <sup>1</sup> - Constant: \\(O(1)\\) - Logarithmic: \\(O(log n)\\) - Linear: \\(O(n)\\) - Polynomial: \\(O(n^2)\\) - Exponential: \\(O(2^n)\\) - Factorial: \\(O(n!)\\)</p> <ol> <li> <p>https://www.codecademy.com/learn/cspath-asymptotic-notation/modules/cspath-asymptotic-notation/cheatsheet\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/search/","title":"Search","text":"<p>A search problem finds a solution that satisfies a problem.</p>"},{"location":"Public/Tech/Software/Theory/semantics/","title":"Semantics","text":"<p>In a programming language, the semantics defines what programs do: their behavior and meaning. </p>"},{"location":"Public/Tech/Software/Theory/small%20omega%20notation/","title":"Small omega notation","text":"<p>Small omega notation represents the lower bound of the runtime of an algorithm; the runtime will be strictly greater than small omega. It is the base case complexity of an algorithm. <sup>1</sup></p> <p><pre><code>\u03a9(g(n)) = { f(n): there exist positive constants c and n0 \n            such that 0 \u2264 cg(n) \u2264 f(n) for all n \u2265 n0 }\n</code></pre> It can also be said that \\(f\\) is \"strictly greater than\" \\(g\\).  </p> <ol> <li> <p>https://www.programiz.com/dsa/asymptotic-notations\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/small-o%20notation/","title":"Small o notation","text":"<p>Small-o notation represents the upper bound of the runtime of an algorithm; the runtime will be strictly smaller than Small-o. It gives the worst case complexity of an algorithm. <sup>1</sup></p> <p>If \\(f = O(g)\\) and \\(g \\ne O(f)\\), then $$ f = o(g) \\iff \\lim_{n \\to \\infty} \\frac{f(n)}{g(n)} = 0 $$ It can also be said that <code>f</code> is \"strictly less than\" \\(g\\).</p> <p></p> <ol> <li> <p>https://www.programiz.com/dsa/asymptotic-notations\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/string/","title":"String","text":"<p>A string is a finite sequence of symbols (symbol) from the alphabet. </p>"},{"location":"Public/Tech/Software/Theory/substring/","title":"Substring","text":"<p>See: [[subsequence]]</p> <p>A substring of a string is a contiguous sequence of symbols from the original string. </p>"},{"location":"Public/Tech/Software/Theory/symbol/","title":"Symbol","text":"<p>A symbol is an element of the alphabet. </p>"},{"location":"Public/Tech/Software/Theory/syntax/","title":"Syntax","text":"<p>In a programming language, the syntax defines how programs look: their form and structure.</p>"},{"location":"Public/Tech/Software/Theory/theta%20notation/","title":"Theta notation","text":"<p>Theta notation encloses the function from above and below. Since it represents the upper and the lower bound of the running time of an algorithm, it is used for analyzing the average case complexity of an algorithm. <sup>1</sup></p> <pre><code>\u0398(g(n)) = { f(n): there exist positive constants c1, c2 and n0\n            such that 0 \u2264 c1g(n) \u2264 f(n) \u2264 c2g(n) for all n \u2265 n0 }\n</code></pre> <p></p> <ol> <li> <p>https://www.programiz.com/dsa/asymptotic-notations\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/tree/","title":"Tree","text":"<p>A tree is a type of knowledge-base/docs/Public/Tech/Software/Theory/graph data structure that has a hierarchical \"tree\" structure. A knowledge-base/docs/Public/Tech/Software/Theory/root node \"branches\" off to its connected children nodes, and those nodes act as a parent node to other children nodes. You can traverse through the tree from the root to any node in a unique path in one direction. </p> <p>Trees can be used to store data that has an inherent hierarchical structure i.e. directories, files, and folders in file management systems. <sup>1</sup></p> <p>Trees are easy to sort and search through using algorithms. </p> <p></p> <ol> <li> <p>https://computersciencewiki.org/index.php/Tree\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Theory/witness-existence/","title":"Witness existence","text":"<p>A witness-existence is some string \\(w\\) (or a proof or certificate) that testifies that \\(x\\in A\\). </p> <p>It asks if there is an input \\(w\\) to the program $V(x, w), a value of \\(x\\), and some \\(t\\) bounding the the witness size and algorithm runtime. </p>"},{"location":"Public/Tech/Software/Tools/GitHub/","title":"GitHub","text":"<p>GitHub is an online software development platform hosting cloud git repositories, used to store, track, and collaborate on software projects. </p> <p>Features: - GitHub Gist, a way to store and share code snippets, without setting up a whole git repository. <sup>1</sup></p> <ol> <li> <p>https://www.liquidweb.com/blog/what-is-a-github-gist/#:~:text=One%20of%20GitHub's%20most%20innovative,alternatives%20to%20just%20code%20snippets.\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Tools/VSCode%20cheat%20sheet/","title":"VSCode cheat sheet","text":"<p><code>ctrl</code> + <code>J</code>: Toggles terminal</p> <p><code>cmd</code> + <code>P</code>: Navigate to file <code>ctrl</code> + <code>tab</code>: Cycle through the last set of files opened</p> <p><code>shift</code> + <code>tab</code>: Indent highlighted text left</p> <p><code>cmd</code> + <code>/</code>: Comment out highlighted text</p> <p><code>shift</code> + <code>cmd</code> + <code>e</code>: Open explorer pane</p> <p><code>cmd</code> + <code>shift</code> + <code>p</code>: Command Palette</p> <p><code>shift</code> + <code>alt</code> + <code>f</code>: Format current file</p>"},{"location":"Public/Tech/Software/Tools/Windows%20cheat%20sheet/","title":"Windows cheat sheet","text":"<p><code>ctrl</code> + <code>Win</code> + <code>d</code>: Creates a new virtual desktop</p> <p><code>ctrl</code> + <code>Win</code> + <code>left_arrow</code> / <code>right_arrow</code>: Navigate between virtual desktops</p> <p><code>ctrl</code> + <code>Win</code> + <code>f4</code>: Remove the current desktop </p>"},{"location":"Public/Tech/Software/Tools/changelog/","title":"Changelog","text":"<p>A changelog is a file that contains a curated, chronologically ordered list of notable changes for each version of a project (git repository, software). <sup>1</sup></p> <ol> <li> <p>https://keepachangelog.com/en/1.1.0/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Tools/commit/","title":"Commit","text":"<p>A commit is a command in git that takes a snapshot of all your changes in your directory.</p> <p>It is good to follow conventions for writing commits, for readability and generating changelogs (changelog). <sup>1</sup></p> <p><code>&lt;type&gt;[optional scope]: &lt;description</code></p> <ul> <li><code>feat</code>: (new feature for the user, not a new feature for build script)</li> <li><code>fix</code>: (bug fix for the user, not a fix to a build script)</li> <li><code>docs</code>: (changes to the documentation)</li> <li><code>style</code>: (formatting, missing semi colons, etc; no production code change)</li> <li><code>refactor</code>: (refactoring production code, eg. renaming a variable)</li> <li><code>test</code>: (adding missing tests, refactoring tests; no production code change)</li> <li><code>chore</code>: (updating grunt tasks etc; no production code change)</li> </ul> <ol> <li> <p>https://gist.github.com/joshbuchea/6f47e86d2510bce28f8e7f42ae84c716\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Tools/flowchart/","title":"Flowchart","text":"<p>A flowchart is a way to model the behavior of a program or function through buildings blocks and connections between the blocks, creating paths - a 'flow'. </p> <p>Some building blocks are: - Process: Represents an action - Decision: Represents a question with a finite number of answers - Terminal: Represents the beginning or ending of a chart</p> <p></p> <p>Think about what the program should accomplish in terms of inputs and outputs. </p>"},{"location":"Public/Tech/Software/Tools/git%20cheat%20sheet/","title":"Git cheat sheet","text":"<p>Connect local repo to remote repo: <code>git remote add origin &lt;url_to_github_repo&gt;</code></p> <p>Show current branch: <code>git branch --show-current</code></p> <p>Retrieve changes from remote repository, but does not automatically merge them into local branch: <code>git fetch</code> - <code>git merge</code> to do the second half</p> <p>To undo a <code>git add .</code>: <code>git reset</code></p> <p>Undo all changes back to last commit (lose uncommitted changes): <code>git reset --hard HEAD</code></p> <p>Remove all untracked files: <code>git clean -f</code></p> <p>Branches: <code>git branch [-ad] &lt;name&gt;</code></p> <p>Don't have all branches? `git fetch --all</p> <p>Show changelog: <code>git log --oneline --decorate --color --graph</code></p>"},{"location":"Public/Tech/Software/Tools/git%20repository/","title":"Git repository","text":"<p>A git repository is a storage location where a collection of files managed by git is stored. </p> <p>Git repositories can be hosted remotely on GitHub  and other platforms. </p>"},{"location":"Public/Tech/Software/Tools/git/","title":"Git","text":"<p>git is a [[version control]] system that tracks changes in any set of computer files, usually used for coordinating work among programmers who are collaboratively developing source code during [[software development]]. <sup>1</sup></p> <ol> <li> <p>https://en.wikipedia.org/wiki/Git\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Tools/package%20manager/","title":"Package manager","text":"<p>A package manager is software that automates the process of installing, upgrading, configuring, and removing other software on a computer in a consistent manner. </p>"},{"location":"Public/Tech/Software/Tools/password%20manager/","title":"Password manager","text":"<p>A password manager is software that stores your passwords for different apps and websites - typically complex and unique passwords. It's useful to protect your other accounts from security breaches. <sup>1</sup></p> <p>Further reading: - Passwords vs. Passphrases <sup>2</sup> - Bitwarden (Cloud) vs. KeePass 2 (Local) <sup>3</sup></p> <ol> <li> <p>https://www.reddit.com/r/explainlikeimfive/comments/11pmdla/eli5_why_is_using_a_password_manager_considered/\u00a0\u21a9</p> </li> <li> <p>https://www.reddit.com/r/Bitwarden/comments/zyeiqr/are_passphrases_better_than_random_passwords/\u00a0\u21a9</p> </li> <li> <p>https://www.reddit.com/r/Bitwarden/comments/1425n4v/bitwarden_vs_keepass/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Tools/vim%20cheat%20sheet/","title":"Vim cheat sheet","text":"<p>site</p>"},{"location":"Public/Tech/Software/Tools/vim%20cheat%20sheet/#motion","title":"Motion","text":"<p><code>w</code> - jump forwards to start of word <code>e</code> - jump forwards to end of word <code>b</code> - jump backwards to start of word <code>ge</code> - jump backwards to end of word</p> <p><code>0</code> - jump to the start of the line <code>$</code> - jump to the end of the line</p> <p><code>10j</code> - jump down 10 lines</p> <p><code>{ / }</code> - jump to prev / next paragraph</p>"},{"location":"Public/Tech/Software/Tools/vim%20cheat%20sheet/#command","title":"Command","text":"<p><code>fx</code> - jump to next occurrence of <code>x</code> (including numbers) <code>Fx</code> - jump to prev occurrence of <code>x</code> <code>;</code> - repeat prev movement <code>,</code> - repeat prev movement, backwards</p> <p><code>zz</code> - center cursor on screen</p> <p><code>u</code> - undo</p> <p><code>:%s/x/y/g</code>: Replace every instance of <code>x</code> with <code>y</code></p> <p><code>:wq</code>: Exit and save</p>"},{"location":"Public/Tech/Software/Tools/vim%20cheat%20sheet/#visual","title":"Visual","text":"<p><code>b</code> - select everything in a block</p> <p><code>vi\"</code> - jumps to and highlights next instance of <code>\"</code></p> <p><code>v/foo</code> - select from curr pos to next instance of <code>foo</code></p> <p><code>V</code> - select whole line</p>"},{"location":"Public/Tech/Software/Tools/vim%20cheat%20sheet/#exiting","title":"Exiting","text":"<p><code>:w</code> - write file (save)</p> <p><code>:q</code> - quit (must save changes first) <code>:q!</code> - quit without saving</p>"},{"location":"Public/Tech/Software/Tools/vim/","title":"Vim","text":"<p>vim is a configurable text editor built to make creating and changing any kind of text very efficient. <sup>1</sup></p> <p>When doing an action in vim, it has the following structure:</p> <p><code>command</code> <code>count</code> <code>motion</code></p> <ol> <li> <p>https://www.vim.org/\u00a0\u21a9</p> </li> </ol>"},{"location":"Public/Tech/Software/Tools/yabai%20cheat%20sheet/","title":"Yabai cheat sheet","text":"<p>Change window focus within space: - <code>alt</code> + <code>j/k/h/l</code></p> <p>Swap windows: - <code>shift</code> + <code>alt</code> + <code>j/k/h/l</code></p> <p>Change focus between external displays: - <code>alt</code> + <code>s/g</code></p> <p>Move window to different display: - <code>shift</code> + <code>alt</code> + <code>s/g</code></p> <p>Maximize a window: - <code>shift</code> + <code>alt</code> + <code>m</code></p> <p>Balance windows: - <code>shift</code> + <code>alt</code> + <code>e</code></p> <p>Start / stop / restart yabai: - <code>ctrl</code> + <code>alt</code> + <code>q/s/r</code></p> <p>Rotate layout clockwise: - <code>shift</code> + <code>alt</code> + <code>r</code></p> <p>TODO: Figure out how to swap windows between displays</p>"},{"location":"Public/Tech/Software/Tools/yabai/","title":"Yabai","text":"<p>See: yabai cheat sheet</p> <p>yabai is a window tiling manager. </p> <p>It is used with skhd to map keybinds to tiling functions.</p>"},{"location":"Public/Tech/Software/Tools/Appearance/colors/","title":"Colors","text":"<p>check this addon: obsidian://show-plugin?id=css-inlay-colors</p> <p>Obsidian Dark Purple: https://www.color-hex.com/color-palette/48785 - Purple: <code>#7e1dfb</code> - Light purple: <code>#b28ecc</code></p> <p>jzky colorway: - Red: <code>#d83825</code>     - Light Red: <code>#f93f29</code>     - Dark Red: <code>#c52300</code> - Green: <code>#2da590</code>     - Light Green: <code>#35ceb3</code> - Yellow: <code>#fdac5b</code>     - Light Yellow: <code>#f4bc83</code>     - Light Yellow Text: <code>#e1c6bb</code> - Blue: <code>#473ca7</code>     - Light Blue: <code>#6857fa</code> - Magenta: <code>#5d53cf</code>     - Light Magenta: <code>#847af3</code> - Cyan: <code>#2da590</code>     - Light Cyan: <code>#35ceb3</code> - Accent: <code>#af9a91</code>     - Light Accent: <code>#e1c6bb</code> - Black: <code>#0c0a0a</code>     - Light Black: <code>#241e1e</code></p> <p>purples: - <code>#9376eb</code></p> <p>other: - <code>#1e1e1e</code></p>"},{"location":"Public/Tech/Software/Tools/Appearance/design%20resources/","title":"Design resources","text":"<ul> <li>color hex codes</li> </ul> <p>Fonts: - text fonts</p> <p>Design:</p>"},{"location":"Public/Tech/Software/Tools/Productivity/Arc%20cheat%20sheet/","title":"Arc cheat sheet","text":"<p><code>ctrl</code> + <code>cmd</code> + <code>f</code>: Fullscreen</p> <p><code>ctrl</code> + <code>shift</code> + <code>=</code>: Add split view <code>ctrl</code> + <code>shift</code> + <code>-</code>: Remove existing split view</p> <p><code>ctrl</code> + <code>shift</code> + <code>[ / ]</code>: Switch to prev / next view</p> <p><code>cmd</code> + <code>l</code>: Edit url of current view</p> <p><code>cmd</code> + <code>shift</code> + <code>c</code>: Copy the current page URL</p> <p><code>cmd</code> + <code>t</code>: Command prompt - 'edit keyboard shortcuts' - 'capture full page'</p> <p><code>cmd</code> + <code>s</code>: Toggle sidebar</p> <p><code>cmd</code> + <code>shift</code> + <code>d</code>: Toggle toolbar</p> <p><code>cmd</code> + <code>opt</code> + 'v': Paste to new tab</p> <p><code>/</code>: jump to search bar on Google</p> <p><code>i</code>: minimize / maximize video on Youtube</p> <p>Sources: - [ ] https://www.hongkiat.com/blog/arc-browser-keyboard-shortcuts/</p>"},{"location":"Public/Tech/Software/Tools/Productivity/MacOS%20cheat%20sheet/","title":"MacOS cheat sheet","text":"<p><code>cmd</code> + <code>q</code>: Quit app</p> <p><code>opt</code> + <code>del</code>: Delete previous word</p> <p><code>shift</code> + <code>cmd</code> + q<code>:</code> Quit all applications</p> <p><code>cmd</code> + <code>shift</code> + <code>g</code>: Search for path in Finder</p> <p><code>cmd</code> + <code>m</code>: Minimize window</p> <p><code>ctrl</code> + <code>left_arrow / right_arrow</code>: Switch desktops</p> <p><code>cmd + left_arrow / right_arrow</code>: Select everything to left / right of cursor</p> <p><code>opt</code> + <code>shift</code> + <code>-</code>: Creates an em dash</p>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian%20cheat%20sheet/","title":"Obsidian cheat sheet","text":"<p><code>cmd</code> + <code>shift</code> + <code>f</code>: Search in all files</p> <p><code>cmd</code> + <code>left_arrow / right_arrow</code>: Toggle left / right sidebar</p> <p><code>opt</code> + <code>cmd</code> + <code>[ / ]</code>: Navigate backwards / forwards</p> <p><code>cmd</code> + <code>,</code>: Open options</p> <p><code>cmd</code> + <code>e</code>: Toggle reading view</p> <p><code>ctrl</code> + <code>alt</code> + <code>d</code>: Reveal current file in navigation</p> <p><code>cmd</code> + <code>shift</code> + <code>s</code>: Show file explorer</p> <p><code>ctrl</code> + <code>alt</code> + <code>j/k</code>:  Focus on tab group to the left / right</p> <p><code>ctrl</code> + <code>del</code>: Delete current file</p> <p><code>cmd</code> + <code>l</code>: Toggle checkbox</p>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian%20cheat%20sheet/#pane-relief","title":"Pane Relief","text":"<p><code>cmd</code> + <code>#</code>: Switch to tab <code>#</code></p> <p><code>ctrl</code> + <code>tab</code>: Switch to next tab</p>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian%20cheat%20sheet/#recent-files","title":"Recent Files","text":"<p><code>cmd</code> + <code>r</code>: Open recent files panel</p>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian%20cheat%20sheet/#footnotes","title":"Footnotes","text":"<p><code>ctrl</code> + <code>alt</code> + <code>i</code>: Toggle footnote</p>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/","title":"Obsidian","text":"<p>plugins I use: - obsidian://show-plugin?id=obsidian-linter - obsidian://show-plugin?id=recent-files-obsidian - obsidian://show-plugin?id=obsidian-hider - obsidian://show-plugin?id=pane-relief - obsidian://show-plugin?id=theme-picker - obsidian://show-plugin?id=obsidian-footnotes</p>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/#theme","title":"theme:","text":""},{"location":"Public/Tech/Software/Tools/Productivity/productivity%20stack/","title":"Productivity stack","text":"<p>linktr.ee/jzkyu</p> <p>web: - browser: Arc</p> <p>planning: - organization: [[Notion]] - prototyping: [[Figma]], [[Excalidraw]] - calendar: [[Google Calendar]] - backpacking: [[Lighterpack]] - budgetting: [[YNAB]]</p> <p>notes: - permanent: Obsidian - capture: [[Collanote]], [[Notion]]  - spaced repetition: [[Anki]]</p> <p>navigation: - text: vim - windows: yabai</p> <p>editors: - code: [[VSCode]], [[nvim]] - papers: [[Overleaf]] - images: paint.net - video: DaVinci Resolve</p> <p>streaming: - capture: [[OBS]] - phone: IVCam - overlay: Streamlabs</p> <p>hosting: - [[Quartz]] through Github Pages</p> <p>other: - url shortener: https://t.ly/links</p>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/","title":"Markdown cheat sheet","text":""},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#headings","title":"Headings","text":"<pre><code># H1\n\n## H2\n\n### H3\n</code></pre>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#h1","title":"H1","text":""},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#h2","title":"H2","text":""},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#h3","title":"H3","text":""},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#bold","title":"Bold","text":"<pre><code>**Bold Text**\n</code></pre> <p>Bold Text</p>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#italic","title":"Italic","text":"<pre><code>*italicized text*\n</code></pre> <p>italicized text</p>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#blockquote","title":"Blockquote","text":"<pre><code>&gt; blockquote\n</code></pre> <p>blockquote</p>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#ordered-list","title":"Ordered List","text":"<pre><code>1. First item\n2. Second item\n    1. Ordered sublist\n3. Third item\n    * Unordered sublist\n</code></pre> <ol> <li>First item</li> <li>Second item<ol> <li>Ordered sublist</li> </ol> </li> <li>Third item<ul> <li>Unordered sublist</li> </ul> </li> </ol>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#unordered-list","title":"Unordered List","text":"<pre><code>- First item\n- Second item\n- Third item\n</code></pre> <ul> <li>First item</li> <li>Second item</li> <li>Third item</li> </ul>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#code","title":"Code","text":"<pre><code>`code`\n</code></pre> <p><code>code</code></p>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#horizontal-rule","title":"Horizontal Rule","text":"<pre><code>---\n</code></pre>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#link","title":"Link","text":"<pre><code>[youtube](https://www.youtube.com/)\n</code></pre> <p>youtube</p>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#image","title":"Image","text":"<pre><code>![alt text](image.jpg)\n</code></pre>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#footnote","title":"Footnote","text":"<pre><code>Here's a sentence with a footnote. [^1]  \n\n[^1]: This is the footnote.\n</code></pre> <p>Here's a sentence with a footnote. <sup>1</sup> </p>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#strikethrough","title":"Strikethrough","text":"<pre><code>~~The world is flat.~~\n</code></pre> <p>The world is flat.</p>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#task-list","title":"Task List","text":"<pre><code>- [ ] Write the press release\n- [ ] Update the website\n- [ ] Contact the media\n</code></pre> <ul> <li> Write the press release</li> <li> Update the website</li> <li> Contact the media</li> </ul>"},{"location":"Public/Tech/Software/Tools/Productivity/Obsidian/Markdown%20cheat%20sheet/#highlight","title":"Highlight","text":"<pre><code>I need to highlight these ==very important words==\n</code></pre> <p>I need to highlight these very important words</p> <ol> <li> <p>This is the footnote.\u00a0\u21a9</p> </li> </ol>"}]}